<apex:component controller="MilitaryDatetimeController">
    <apex:attribute name="dateTimeVal" description="The Sobject datetime field value to display as military 24-clock format" required="true" type="dateTime" assignTo="{!dateTimeValue}"/>
    <apex:attribute name="edit" description="Indicate if the datetime is of type input" type="Boolean" default="false" />
    <apex:attribute name="hiddenFieldId" description="The field id to which the value of dateTime field to return to" type="String" />
    <apex:attribute name="datetimepickerid" type="string" description="The id of the input field used in the component. This is required to differentiate the fields when we use the component multiple times on a single page." default="datetimepicker" />

    <apex:stylesheet value="{!URLFOR($Resource.datetimepicker,  'datetimepicker/jquery.datetimepicker.css')}" />
    <apex:includeScript value="{!URLFOR($Resource.jquery, 'js/jquery-1.7.2.min.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.datetimepicker, 'datetimepicker/jquery.datetimepicker.js')}" />
    <apex:includeScript value="{!URLFOR($Resource.momentJs)}" />

    <script type="text/javascript">
        jQuery(function(){
          if ({!edit}){
            jQuery('input[id$={!datetimepickerid}]').datetimepicker(
                                            { format:'m/d/Y H:i',
                                              closeOnDateSelect:true,
                                              onChangeDateTime:function(dp,$input){
                                                                jQuery('input:hidden[id$={!hiddenFieldId}]').val((moment($input.val().toString()).format('L LT') == 'Invalid date' ? '' : moment($input.val().toString()).format('L LT')));
                                                                }
                                             });
			 jQuery('input:hidden[id$={!hiddenFieldId}]').val((moment('{!timeZoneValue}').format('L LT') == 'Invalid date' ? '' : moment('{!timeZoneValue}').format('L LT')).toString());
		  }
        });
    </script>
    
    <apex:outputPanel rendered="{!!edit}">
        {!timeZoneValue}
    </apex:outputPanel>
    
    <apex:outputPanel rendered="{!edit}">   
        <input id="{!datetimepickerid}" type="text" value="{!timeZoneValue}" />
    </apex:outputPanel>
</apex:component>