<apex:component selfClosing="true" controller="Fancy_Tree">

	<apex:attribute name="TreeID" assignTo="{!TreeName}" required="true" type="string" description="the id of the fancy tree" />
	<apex:attribute name="TreeString" assignTo="{!TreeStr}" required="true" type="string" description="the Json String of the tree" />
	<apex:attribute name="SelectedKeysString" assignTo="{!SelectedKeys}" type="string" description="a string for the selected keys to be stored" />
	<apex:attribute name="checkbox" type="boolean" default="true" description="Checkbox to select items from tree" />
	<apex:attribute name="activateActionSignature" type="string" description="The signature of the function to call on select of tree node" />
	<apex:attribute name="mode" type="string" default="3" description="mode of the tree" />
	<apex:attribute name="debug" type="boolean" default="false" description="show extra divs to sees of selections" />		
	<apex:attribute name="ID_PageSideStorage" type="string" description="Id of the element the the tree will push selected keys to" />
    <apex:attribute name="allowInactiveNode" assignTo="{!allowInactive}" type="boolean" default="true" description="show Inactive nodes in the tree" />
		
	<apex:includeScript value="{!URLFOR($Resource.jquery, 'js/jquery-1.7.2.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jquery, 'js/jquery-ui-1.8.21.custom.min.js')}" />
	<apex:stylesheet value="{!URLFOR($Resource.fancytree, 'skin-win7/ui.fancytree.css')}" />
	<apex:includescript value="{!URLFOR($Resource.fancytree, 'jquery.fancytree.js')}" />
	<apex:includescript value="{!URLFOR($Resource.fancytree, 'src/jquery.fancytree.filter.js')}" />
	<style>
		.display_off {
			display: none;
		}
		
		.display_on {
			display: block;
		}
    </style>
    
	<script type="text/javascript">
    $ = jQuery.noConflict();
    
    var treeData = [{!TreeStr}];
    
    $(function(){    
    $('[id*={!TreeName}]').fancytree({
            extensions: ["filter"],
            checkbox: {!checkbox},
            selectMode: {!mode},
            source: treeData,
            select: function(event, data) {
                // Get a list of all selected nodes, and convert to a key array:
                var selKeys = $.map(data.tree.getSelectedNodes(), function(node){
                    return node.key;
                });
                $('[id*={!TreeName}echoSelection3]').text(selKeys.join(", "));
                $('[id*={!ID_PageSideStorage}]').val(selKeys.join(","));
                // Get a list of all selected TOP nodes
                var selRootNodes = data.tree.getSelectedNodes(true);
                // ... and convert to a key array:
                var selRootKeys = $.map(selRootNodes, function(node){
                    return node.key;
                });
                $('[id*={!TreeName}echoSelectionRootKeys3]').text(selRootKeys.join(", "));
                $('[id*={!TreeName}echoSelectionRoots3]').text(selRootNodes.join(", "));
            },
            filter: {
                mode: "hide"
            },
//            dblclick: function(event, data) {
//                data.node.toggleSelected();
//            },
            activate: function(event, data) {
                {!activateActionSignature}               
            },
            keydown: function(event, data) {
                if( event.which === 32 ) {
                    data.node.toggleSelected();
                    return false;
                }
            },
            renderNode: function(event, data) {
                var node = data.node;
                if(node.data.status === 'Inactive'){
                    var $span = $(node.span);
                    $span.find("span.fancytree-title").text(node.title).css({
                        "color":"red"
                    });
                }
            },
            // The following options are only required, if we have more than one tree on one page:
//              initId: "treeData",
            cookieId: "fancytree-Cb3",
            idPrefix: "fancytree-Cb3-"
        });

        $('[id*={!TreeName}showAllNode]').change(function(){            
            if ($(this).is(':checked')){
                  $('[id*={!TreeName}]').fancytree("getTree").clearFilter();
            }
            else {
//              $('[id*={!TreeName}]').fancytree("getTree").filterBranches(function(node){
                $('[id*={!TreeName}]').fancytree("getTree").applyFilter(function(node){
                return (node.data.status === 'Active'); });
            }            
        });
        
        $(function(){            
            if ($('[id*={!TreeName}showAllNode]').is(':checked')){
                  $('[id*={!TreeName}]').fancytree("getTree").clearFilter();
            }
            else {
//              $('[id*={!TreeName}]').fancytree("getTree").filterBranches(function(node){
                $('[id*={!TreeName}]').fancytree("getTree").applyFilter(function(node){
                return (node.data.status === 'Active'); });
            }            
        });        
        
    });    
    </script>

    <apex:outputPanel layout="block" rendered="{!allowInactive}" >
        <br />
        <input type="checkbox" id="{!TreeName}showAllNode" checked="checked">Show Inactive Items</input>
    </apex:outputPanel>

<!-- <div class="{!if(showInactiveSelector, 'display_on','display_off')}"> <input type="checkbox" id="{!TreeName}showAllNode" >Show Inactive Items</input> </div> -->
    
<!-- <div id="{!TreeName}"></div> -->
	<div class="{!if(debug, 'display_on','display_off')}">Selected keys: <span id="{!TreeName}echoSelection3">-</span></div>
	<div class="{!if(debug, 'display_on','display_off')}">Selected root keys: <span id="{!TreeName}echoSelectionRootKeys3">-</span></div>
	<div class="{!if(debug, 'display_on','display_off')}">Selected root nodes: <span id="{!TreeName}echoSelectionRoots3">-</span></div>
	<div class="{!if(debug, 'display_on','display_off')}">JSon String <br /> {!TreeStr}</div>
	<p/>
	<p/>

</apex:component>