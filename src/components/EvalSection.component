<apex:component controller="GenerateEvalComponent">
	<apex:attribute name="parentId" description="Id of the parent Evaluation record" type="Id" assignTo="{!evaluationId}" />
    <apex:attribute name="pbsParentId" description="Id of the parent PBS record" type="Id" assignTo="{!pbsId}" />
    <apex:attribute name="editEnabled" description="Whether Edit functionality is enabled" type="Boolean" default="true" />
    <apex:attribute name="onEdit" description="The Javascript function to call when Edit is clicked" type="String" />
    <apex:attribute name="formId" description="Id of the form element that includes this component" type="String" />
    <apex:attribute name="uniqueId" description="Unique ID so we can differentiate JS functions" type="String" required="true" />
    <apex:attribute name="isPdf" description="Boolean describing whether or not this is for a PDF rendering" type="Boolean" required="false" default="false" />
    <apex:attribute name="rules" description="The rules for the fields in the dialog. Use the field names in the rules instead of field IDs."
        type="String" required="false" />
    
    <apex:attribute name="evaltype" description="Kind of eval" type="string" assignTo="{!evalname}" required="true" />  
    <apex:attribute name="category" description="Section of the Eval" type="string" assignTo="{!cat}" required="true" />
    <apex:attribute name="subcategory" description="Sub-Section of the Eval" type="string" assignTo="{!subcat}" required="true" />
    <apex:attribute name="subsubcategory" description="Section of the Eval" type="string" assignTo="{!subsubcat}" required="false" />
    
    <apex:includeScript value="{!URLFOR($Resource.jquery, 'js/jquery-1.7.2.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.jquery, 'js/jquery-ui-1.8.21.custom.min.js')}"/>
    <apex:includeScript value="{!URLFOR($Resource.CommonJS)}"/>
    <apex:stylesheet value="{!URLFOR($Resource.jquery, 'css/custom-theme/jquery-ui-1.8.21.custom.css')}"/>
    
    <form id="evalForm" method="post" >
    <apex:pageBlock rendered="{!ctlList.size>0}">
    <apex:outputText value="{! 'EVAL TYPE: ' + evaltype}" />
    <apex:pageBlockSection title="{!subcategory}" collapsible="false">
    <apex:repeat value="{!ctlList}" var="fld">
    <apex:pageBlockSectionItem >
    <apex:outputText value="{!fld}" escape="false" />
    </apex:pageBlockSectionItem>
    </apex:repeat>
    <input class="btn" type="submit" value="Save" id="btnSave" />
    <input class="btn" type="button" value="Cancel" onclick="evalForm.reset()"/>
    </apex:pageBlockSection>
    </apex:pageBlock>
    </form>
    
    
    <script>
    jQuery.noConflict();

   	function bindSubmitEvent () {  $('#evalForm').on("submit", function (event) {
   			event.preventDefault();
           	var formData = $(this).serializeArray();
			var jsonData = JSON.stringify(formData);
       		var uuid = (new Date()).getTime();
			
      		console.log(jsonData);
      		// vf remote to save data
      		debugger;
			GenerateEvalComponent.saveFields('{!parentID}', '{!$User.Id}'+'-'+uuid, '{!evaltype}', '{!category}', '{!subcategory}', jsonData,
               			function (result, event) {
                    	if (!event.status) {
                        	alert("Failed to save data! Error: " + event.message);
                        	anno.addAnnotation(element);
                    	}else{
                    		$("#evalForm").empty();
                    	}
                	});
        });
	}
	
    jQuery(document).ready(function ($) {
	    var serializeObject = function ($) {
	      var o = {};
	      var a = this.serializeArray();
	      $.each(a, function () {
	          if (o[this.name] !== undefined) {
	              if (!o[this.name].push) {
	                  o[this.name] = [o[this.name]];
	              }
	              o[this.name].push(this.value || '');
	         } else {
	             o[this.name] = this.value || '';
	         }
	     });
	     return o;
	 	};
	 	bindSubmitEvent();
	});


    </script>
</apex:component>