<apex:page title="{!Case_Management_Plan__c.Name}" standardController="Case_Management_Plan__c" extensions="ORcombinedISPController,ORISPHelper"  tabStyle="ESD_Home__tab" sidebar="false" >
	<apex:stylesheet value="{!URLFOR($Resource.mentoresd,'/mentoresd.css')}" />
	<apex:stylesheet value="{!URLFOR($Resource.mentoresd,'/mentoresdcss2.css')}" />
    <apex:stylesheet value="{!URLFOR($Resource.jquery, 'css/custom-theme/jquery-ui-1.8.21.custom.css')}" />
    
	<apex:includeScript value="{!URLFOR($Resource.jquery, 'js/jquery-1.7.2.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.jquery, 'js/jquery-ui-1.8.21.custom.min.js')}" />
	<apex:includeScript value="{!URLFOR($Resource.CommonJS)}" />
	
	<apex:variable var="headerColor" value="#f39c12" />
	<apex:variable var="activeHeaderColor" value="#f39c12" />
	
	
	<style>
		.tableLabel{
    		font-size: 12px;
			font-weight:normal;
		}
		
		.fixed-dialog {
            position: fixed;
            top: 75px;
            left: 100px;
            overflow-y: scroll;
            max-height: 600px;
        }
      
        [id$=sidebar-item] {
			margin: 5px;
			border-radius: 6px;
		}
		[id$=sidebar-item] .pbSubheader {
			background-color: {!headerColor} !important;
			border-top-width: 0 !important;
			border-radius: 6px 6px 0 0;
			margin-bottom: 0;
		}
		[id$=sidebar-item] h3 {
			color: white;
			margin: 6px;
			font-size: 12px !important;
		}
		[id$=sidebar-item] .detailList td.data2Col {
			padding: 0;
		}
		[id$=sidebar-item] .sidebar-body {
			background-color: #FEF5E6;
			padding: 15px 10px;
			border: 2px solid {!headerColor};
			border-radius: 0 0 6px 6px;
		}
		[id$=sidebar-item] .sidebar-body-error {
			background-color: #FEF5E6;
			padding: 15px 10px;
			border: 3px solid #E74C3C;
			border-radius: 0 0 1px 1px;
		}
		
		[id$=sidebar-item] .sidebar-body-success {
			background-color: #FEF5E6;
			padding: 15px 10px;
			border: 3px solid #208A18;
			border-radius: 0 0 1px 1px;
		}
		
		[id$=sidebar-item] .data2Col .sidebar-body p {
			margin-top: 0;
			margin-bottom: 15px;
		}
		
		td#page-sidebar {
			width: 300px;
			
		}
		
		 
		td#page-sidebar .bPageBlock .pbTitle {
			width: 90%;
		}
		
		#wholeTable {
			width: 100%;
		}

		#wholeTable tr td {
			vertical-align: top;
		}

		td#page-sidebar {
			width: 300px;
		}

		td#page-sidebar .bPageBlock .pbTitle {
			width: 90%;
		}
		
		.errorDiv{
		
		}
	</style>
	
	<c:PersonalRecord pbsId="{!Case_Management_Plan__c.Service_Assignment__r.Admission__r.Person_Being_Served__c}" servAssignId="{!Case_Management_Plan__c.Service_Assignment__c}" parentPage="ORISP" admId="{!Case_Management_Plan__c.Service_Assignment__r.Admission__c}" />

<table id="wholeTable" border="1|0">
	<tr>
		<td id="page-sidebar">
			<apex:form id="ispSidebarForm" >
				<apex:actionFunction name="finalize" action="{!finalize}" status="pageProcessing" reRender="pageMessages" />
				<apex:actionFunction name="revise" action="{!revise}" status="pageProcessing" reRender="pageMessages" />
				<apex:actionFunction name="redirect" action="{!redirect}" reRender="pageMessages" >
					<apex:param name="targetSec" value="" />
					<apex:param name="isSection" value="" />
				</apex:actionFunction>
				<apex:pageBlock >
					<apex:outputPanel style="font-size:15px; font-weight:Bold; text-align: left;" >
						<table>
							<tr>
								<td colspan="2">{!Case_Management_Plan__c.Name}</td>
							</tr>
							<tr>
								<td>Created By:</td>
								<td>{!Case_Management_Plan__c.CreatedBy.Name}</td>
							</tr>
							<tr>
								<td>Status:</td>
								<td>{!Case_Management_Plan__c.Status__c}</td>
							</tr>
							<tr>
								<td>Created Date:</td>
								<td> <apex:outputText value=" {!Case_Management_Plan__c.CreatedDate}"></apex:outputText></td>
							</tr>
							<tr>
								<td>Date of last update:</td>
								<td> <apex:outputText value=" {!Case_Management_Plan__c.LastModifiedDate}"></apex:outputText></td>
							</tr>
							<tr>
								<td colspan="2"><apex:outputLink value="/{!$Setup.High_Risk_Matrix__c.Doc_URL__c}" target="_blank" >View High Risk Matrix</apex:outputLink></td>
							</tr>
							</table>
							<br/>
							<table>
							<tr>
								<td>
									<apex:variable value="" var="a" rendered="{!canFinalize}" >
										<a class="btn" onclick="finalize(); return false;">Finalize</a>
									</apex:variable>
								</td>
								<td>
									<apex:variable value="" var="b" rendered="{!canRevise}" >
										<a class="btn" onclick="revise(); return false;">Revise</a>
									</apex:variable>
								</td>
							</tr>
						</table>
					</apex:outputPanel>
				</apex:pageBlock>
				<apex:pageBlock >
					<apex:pageBlockSection title="Risk Identification Tool" collapsible="false" id="isp-sidebar-item" columns="1" >
						<apex:outputPanel layout="none" >
							<div class="sidebar-body{!errorMap['Health and Medical']}" >
								<apex:outputLink onClick="validateModified('Health and Medical','false'); return false;" >Health and Medical</apex:outputLink>
							</div>
							<div class="sidebar-body{!errorMap['Safety']}" >
								<apex:outputLink onClick="validateModified('Safety','false'); return false;">Safety</apex:outputLink>
							</div>
							<div class="sidebar-body{!errorMap['Financial']}" >
								<apex:outputLink onClick="validateModified('Financial','false'); return false;">Financial</apex:outputLink>
							</div>
							<div class="sidebar-body{!errorMap['Mental Health']}" >
								<apex:outputLink onClick="validateModified('Mental Health','false'); return false;">Mental Health</apex:outputLink>
							</div>
							<div class="sidebar-body{!errorMap['Behavior']}" >
								<apex:outputLink onClick="validateModified('Behavior','false'); return false;">Behavior</apex:outputLink>
							</div>
							<div class="sidebar-body-success" >
								<apex:outputLink onClick="validateModified('evaluation','true'); return false;">Evaluation</apex:outputLink>
							</div >
						</apex:outputPanel>
					</apex:pageBlockSection>
					</apex:pageBlock>
					<apex:pageBlock >
					<apex:pageblockSection title="Individual Support Plan" collapsible="false" id="isp-sidebar-item" columns="1" >
						<apex:outputPanel layout="none" >
							<div class="sidebar-body{!IF(Case_Management_Plan__c.PD_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.PD_Errors__c),'','-error'))}" > 								
								<apex:outputLink onClick="validateModified('planDates','true'); return false;"> Plan Effective Dates </apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.Profile_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.Profile_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('pageProfile','true'); return false;"  > One Page Profile</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.Desired_outcomes_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.Desired_outcomes_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('desiredOutcomes','true'); return false;" > Desired Outcomes</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.CDP_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.CDP_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('cdp','true'); return false;" > Career Development Plan (CDP) </apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.Risk_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.Risk_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('risk','true'); return false;" >Risk Management Plan</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.CCMS_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.CCMS_Errors__c),'','-error'))}" > 
								<apex:outputLink onClick="validateModified('ccms','true'); return false;">Chosen Case Management Services</apex:outputLink>
							</div>
							<div class="sidebar-body-success" >
								<apex:outputLink onClick="validateModified('naturalSupports','true'); return false;" >Natural Supports, Community Resources, and Other Voluntary Services and Supports</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.SPPC_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.SPPC_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('sppc','true'); return false;" >Chosen State Plan Personal Care (SPPC) services</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.kplan_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.kplan_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('kplan','true'); return false;" >Chosen K Plan Services</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.waiver_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.waiver_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('waiver','true'); return false;" >Chosen Waiver Services</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.KPR_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.KPR_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('kpr','true'); return false;" >Chosen K Plan Residential Service</apex:outputLink>
							</div>
							<div class="sidebar-body-success" >
								<apex:outputLink onClick="validateModified('ctts','true'); return false;">Community Transportation Services</apex:outputLink>
							</div>
							<div class="sidebar-body-success" >
								<apex:outputLink onClick="validateModified('adlchosen','true'); return false;">Additional Chosen Services</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.Differences_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.Differences_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('differences','true'); return false;" >Differences</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.Ack_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.Ack_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('acknowledgements','true'); return false;" >Acknowledgements</apex:outputLink>
							</div>
						</apex:outputPanel>
					</apex:pageblockSection>
				</apex:pageblock>
				<apex:pageBlock >
					<apex:pageblockSection title="Contributors and Signatures" collapsible="false" id="isp-sidebar-item" columns="1" >
						<apex:outputPanel layout="none" >
							<div class="sidebar-body-success" >
								<apex:outputLink onClick="validateModified('relparty','true'); return false;" >Related Parties</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.Leg_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.Leg_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('legal','true'); return false;" >Legal Relationships</apex:outputLink>
							</div>
							<div class="sidebar-body{!IF(Case_Management_Plan__c.Agreement_Errors__c == 'No Errors','-success',IF(ISBLANK(Case_Management_Plan__c.Agreement_Errors__c),'','-error'))}" >
								<apex:outputLink onClick="validateModified('agreement','true'); return false;" >Contributors and Agreement to This Plan</apex:outputLink>
							</div>
						</apex:outputPanel>
					</apex:pageblockSection>
				</apex:pageblock>
				<apex:pageBlock >
					<apex:pageblockSection title="Attachments" collapsible="false" id="isp-sidebar-item" columns="1" >
						<apex:outputPanel layout="none" >
							<div class="sidebar-body-success" >
								<apex:outputLink onClick="validateModified('attachments','true'); return false;" >Attachments</apex:outputLink>
							</div>
							
						</apex:outputPanel>
					</apex:pageblockSection>
				</apex:pageblock>
			</apex:form>
		</td>
	<td id="page-body">
	<c:SObjectNotesAndAttachments retURL="/apex/ORcombinedISP?id={!Case_Management_Plan__c.id}&mode=EDIT&section=attachments" orispId="{!Case_Management_Plan__c.id}" parentId="{!Case_Management_Plan__c.id}" pbsId="{!Case_Management_Plan__c.Service_Assignment__r.Admission__r.Person_Being_Served__c}" admId="{!Case_Management_Plan__c.Service_Assignment__r.Admission__c}" servAssignId="{!Case_Management_Plan__c.Service_Assignment__c}" parentPage="ORISP" rendered="{!section == 'attachments' || section == 'Full View'}"></c:SObjectNotesAndAttachments>
	<apex:pageMessages id="pageMessages" showDetail="false" />
	<apex:form id="FormId" >
		<apex:actionFunction name="saveRelParty" action="{!saveRelParty}" status="pageProcessing" rerender="relatedParties_Alt1_Header,relatedPartyEntry,relatedPartyEntry2,pageMessages"  />
        <apex:actionFunction name="showAddRelParty" action="{!showAddRelParty}"   rerender="relatedParties_Alt1_Header,relatedPartyEntry,relatedPartyEntry2,pageMessages" />
        <apex:actionFunction name="saveContributor" action="{!saveContributor}" status="pageProcessing"  rerender="contributorsTable,contributorEntryBlock,pageMessages" onComplete="setUpFields(); return false;"/>
        <apex:actionFunction name="showAddContributor" action="{!showAddContributor}" rerender="contributorsTable,contributorEntryBlock,pageMessages" onComplete="openDialog('contributorModal', 'span', 'Add Contributors and Signatures',800); setUpFields(); return false;" status="pageProcessing"/>
        <apex:actionFunction name="showEditContributor" action="{!showEditContributor}" rerender="contributorsTable,contributorEntryBlock,pageMessages" onComplete="openDialog('contributorModal', 'span', 'Add Contributors and Signatures', 800); setUpFields(); return false;" status="pageProcessing" >
        	<apex:param name="contributorID" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="deleteContributor" action="{!deleteContributor}" rerender="contributorsTable,pageMessages" status="pageProcessing" >
        	<apex:param name="contributorDelID" value="" />
        </apex:actionFunction>
        <apex:actionFunction name="save" action="{!save}" status="pageProcessing"  rerender="pageMessages" >
        		<apex:param name="targetSec" value="" />
				<apex:param name="isSection" value="" />
        </apex:actionFunction>
<!--         <apex:actionfunaction action="{!cancel}" name="cancel" rerender="pageMessages" /> -->
   
		<apex:pageBlock id="general" mode="maindetail" >
			<apex:pageBlockButtons location="top" rendered="{!Case_Management_Plan__c.Status__c == 'Inactive Draft' && section != '' && section != 'attachments'}">
			<div class="blockbtns">
				<apex:commandButton value="Save" onClick="isModified = false; handleAllErrors('{!section}','',''); return false;" rendered="{!isEditMode}" />
				<apex:commandButton value="Cancel" action="{!cancel}" rendered="{!isEditMode}"/>
<!-- 				<apex:commandButton value="Edit" onClick="window.location='/{!Case_Management_Plan__c.Id}?mode=EDIT&section={!section}'; return false;" rendered="{!canEdit}" reRender="pageMessages"/> -->
			</div>
			</apex:pageBlockButtons>
			
			<!-- Plan Effective Dates Start -->
			<apex:pageBlockSection columns="1" title="Plan Effective Dates" id="planDates_Alt1_Header" collapsible="true" rendered="{!section == 'planDates' || section == 'Full View'}">
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.PD_Isvalid__c && Case_Management_Plan__c.PD_Errors__c != 'No Errors'}" >
					<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.PD_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem rendered="{!isEditMode}">
                    <apex:outputLabel for="startDate" value="Start" />
                    <apex:outputPanel >
                        <div class="requiredInput">
                            <div class="requiredBlock"></div>
                            <apex:inputField value="{!Case_Management_Plan__c.PD_Start__c}" id="startDate"/>
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
				<apex:outputField value="{!Case_Management_Plan__c.PD_Start__c}" rendered="{!isViewMode}" />
				<apex:pageBlockSectionItem rendered="{!isEditMode}">
                    <apex:outputLabel for="endDate" value="End" />
                    <apex:outputPanel >
                        <div class="requiredInput">
                            <div class="requiredBlock"></div>
                            <apex:inputField value="{!Case_Management_Plan__c.PD_End__c}" id="endDate"/>
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
				<apex:outputField value="{!Case_Management_Plan__c.PD_End__c}" rendered="{!isViewMode}" />
				<apex:inputhidden value="{!Case_Management_Plan__c.PD_Isvalid__c}" id="pd_isValid" />
				<apex:inputhidden value="{!Case_Management_Plan__c.PD_Errors__c}" id="pd_errors"/>
			</apex:pageBlockSection>
			<!-- Plan Effective Dates End -->
			
			<!-- One Page Profile Start -->
			<apex:pageBlockSection columns="1" title="One Page Profile" id="pageProfile_Alt1_Header" collapsible="true" rendered="{!section == 'pageProfile' || section == 'Full View'}" >
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Profile_isValid__c && Case_Management_Plan__c.Profile_Errors__c != 'No Errors'}" >
					<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Profile_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
				</apex:pageBlockSectionItem>
				<apex:inputField value="{!Case_Management_Plan__c.Profile_One_Page_Profile_for__c}" id="profile_onepage" rendered="{!isEditMode}" html-data-rules="{&quot;Other&quot;: [&quot;{!$Component.specifyOtherItem.profile_Other}&quot;]}" />
				<apex:outputField value="{!Case_Management_Plan__c.Profile_One_Page_Profile_for__c}" rendered="{!isViewMode}"/>
				<apex:pageBlockSectionItem id="specifyOtherItem" rendered="{!isEditMode}">
                    <apex:outputLabel for="profileOther" value="Specify Other" />
                    <apex:outputPanel >
                        <div class="requiredInput">
                            <div class="requiredBlock"></div>
                            <apex:inputField value="{!Case_Management_Plan__c.Profile_Specify_Other__c}" id="profile_Other"/>
                        </div>
                    </apex:outputPanel>
                </apex:pageBlockSectionItem>
				<apex:outputField value="{!Case_Management_Plan__c.Profile_Specify_Other__c}" rendered="{!isViewMode && Case_Management_Plan__c.Profile_One_Page_Profile_for__c == 'Other'}" />
				<apex:pageBlockSectionItem rendered="{!isViewMode && Case_Management_Plan__c.Profile_One_Page_Profile_for__c != 'Other'}" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.Profile_What_people_like_admire_about__c}" id="profile_admire" rendered="{!isEditMode}"  cols="40" rows="5"/>
				<apex:outputField value="{!Case_Management_Plan__c.Profile_What_people_like_admire_about__c}" rendered="{!isViewMode}" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.Profile_How_best_to_support__c}" id="profile_support" rendered="{!isEditMode}" cols="40" rows="5"/>
				<apex:outputField value="{!Case_Management_Plan__c.Profile_How_best_to_support__c}" rendered="{!isViewMode}" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.Profile_What_is_important_to__c}" id="profile_important" rendered="{!isEditMode}" cols="40" rows="5"/>
				<apex:outputField value="{!Case_Management_Plan__c.Profile_What_is_important_to__c}" rendered="{!isViewMode}" />
				<apex:inputHidden value="{!Case_Management_Plan__c.Profile_isValid__c}" id="profile_valid" />
				<apex:inputHidden value="{!Case_Management_Plan__c.Profile_Errors__c}"  id="profile_errors" />
			</apex:pageBlockSection>
			
			 <!-- One Page Profile End -->
			<apex:pageBlockSection columns="1" rendered="{!section == 'desiredOutcomes' || section == 'Full View'}" > 
			<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Desired_Outcomes_IsValid__c && Case_Management_Plan__c.Desired_outcomes_Errors__c != 'No Errors'}" >
					<apex:outputpanel >
						<div style="background-color: #e74c3c;">
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Desired_outcomes_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
				</apex:pageBlockSectionItem>
				<c:EvaluationResponseTable type="Desired Outcomes"
                           formId="{!$Component.FormID}"
                           uniqueId="Desired_Outcomes"
                           editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           showAddNew="true"
                           enableReportButton="false"
                           cols="1"
                           caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
                           visiblityRowRules="{&quot;ISP_Is_there_a_paid_Service__c&quot; : { &quot;Yes&quot; : [&quot;ISP_Paid_Services__c&quot;]}}"
                           customLabels="[{&quot;field&quot;:&quot;ISP_Is_there_a_paid_Service__c&quot;, &quot;label&quot;:&quot;Paid supporting service?&quot;},
                           {&quot;field&quot;:&quot;ISP_Paid_Services__c&quot;, &quot;label&quot;:&quot;If so, what is it?&quot;},
                           {&quot;field&quot;:&quot;ISP_Note_if_Written_Implementation__c&quot;, &quot;label&quot;:&quot;Written implementation strategies expected?&quot;} ]"
                 />
                        
           		<apex:inputHidden value="{!Case_Management_Plan__c.Desired_outcomes_Errors__c}" />
           		<apex:inputHidden value="{!Case_Management_Plan__c.Desired_Outcomes_IsValid__c}" />
			</apex:pageBlockSection>
			
			   <!-- Career Development Plan Start -->
			<apex:pageBlockSection columns="1" title="Career Development Plan (CDP)" id="cdp_Alt1_Header" collapsible="true" rendered="{!section == 'cdp' || section == 'Full View'}">
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.CDP_IsValid__c && Case_Management_Plan__c.CDP_Errors__c != 'No Errors'}" >
					<apex:outputpanel >
						<div style="background-color: #e74c3c;">
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.CDP_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
				</apex:pageBlockSectionItem>
				<table border="1">
					<apex:outputPanel style="font-weight: bold;" >
						Oregon is an "Employment First" state. We believe that each person:
							<ul>
								<li>can work and there is a job for everyone</li>
								<li>has something to contribute and needs to contribute</li>
								<li>has the right to a competitive job in a typical community work setting, including self-employment, making comparative wages with sufficient hours to make a difference </li>
								<li>may identify the direction of his/her employment based on skills, interests, and strengths</li>
								<li>has a right to be informed about the employment services options that are available to him/her</li>
							</ul>
							To receive an employment service, you must have a goal of pursuing individual, integrated employment
					</apex:outputPanel> 
				</table>
				<apex:pageBlockSectionItem />
				<apex:inputField value="{!Case_Management_Plan__c.CDP_Education_Level_Completed__c}" rendered="{!isEditMode}" id="cdpEduLevel"/>
				<apex:outputField value="{!Case_Management_Plan__c.CDP_Education_Level_Completed__c}" rendered="{!isViewMode}" />
				<apex:pageBlockSectionItem />
				<apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						Students (age 16-20) :
					</div>
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem />
				<apex:inputField value="{!Case_Management_Plan__c.CDP_STU_Enable_Student_Section__c}" id="cdpEnableStudent" onchange="handleCDPStudent(); return false;" rendered="{!isEditMode}" html-data-rules="{&quot;1&quot;:[&quot;{!$Component.expectedExitDate}&quot;,
 																																				&quot;{!$Component.cdpCompleteDate}&quot;, 
																																				&quot;{!$Component.chooseOneStudent}&quot;, 
 																																				&quot;{!$Component.vrStatus}&quot;]}"/> 
				<apex:outputField value="{!Case_Management_Plan__c.CDP_STU_Enable_Student_Section__c}" rendered="{!isViewMode}" />
				<apex:pageBlockSectionItem />
				<apex:inputField value="{!Case_Management_Plan__c.CDP_STU_Expected_date_exit_from_school__c}"  id="expectedExitDate"  rendered="{!isEditMode}" />
                <apex:outputField value="{!Case_Management_Plan__c.CDP_STU_Expected_date_exit_from_school__c}" rendered="{!isViewMode}" />
				<apex:inputField value="{!Case_Management_Plan__c.CDP_STU_Date_CDP_Completed__c}"  id="cdpCompleteDate" rendered="{!isEditMode}" />
                <apex:outputField value="{!Case_Management_Plan__c.CDP_STU_Date_CDP_Completed__c}"   rendered="{!isViewMode}" />
                <apex:inputField value="{!Case_Management_Plan__c.CDP_STU_Choose_One_Students__c}"  id="chooseOneStudent" label="Choose one of the following statements" rendered="{!isEditMode}"/>
                <apex:outputField value="{!Case_Management_Plan__c.CDP_STU_Choose_One_Students__c}"  label="Choose one of the following statements" rendered="{!isViewMode}"/>
                <apex:inputField value="{!Case_Management_Plan__c.CDP_STU_VR_Status__c}"  id="vrStatus" label="Status with Vocational Rehabilitation (VR) (age 16 and up)" html-data-rules="{&quot;Other/Not Applicable&quot;:[&quot;{!$Component.vrStatusExplain}&quot;]}" rendered="{!isEditMode}"/>
                <apex:outputField value="{!Case_Management_Plan__c.CDP_STU_VR_Status__c}" label="Status with Vocational Rehabilitation (VR) (age 16 and up)" rendered="{!isViewMode}"/>
                <apex:pageBlockSectionItem />
                <apex:inputField value="{!Case_Management_Plan__c.CDP_STU_VR_Status_Explain__c}"  id="vrStatusExplain" rendered="{!isEditMode}" />
                <apex:outputField value="{!Case_Management_Plan__c.CDP_STU_VR_Status_Explain__c}" rendered="{!isViewMode}"/>
				<apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						Working Age Adults (age 21-60) :<br/>(<i>If the person is at least 18 years old and has exited school, complete this section instead of the "Students (age 16-20)" section</i>)
					</div>
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem />																													
				<apex:inputField value="{!Case_Management_Plan__c.CDP_WA_Enable_Working_Age_Section__c}" id="cdpWAEnable" onchange="handleCDPWACheckAll(); return false;" rendered="{!isEditMode}" label="Check here to enable the Working Age Adults section"  html-data-rules="{&quot;1&quot;:[&quot;{!$Component.chooseoneWorkingAdults}&quot;,
																																			&quot;{!$Component.barriersIntegrated}&quot;,
																																			&quot;{!$Component.barriersAddresses}&quot;]}"/>
				<apex:outputField value="{!Case_Management_Plan__c.CDP_WA_Enable_Working_Age_Section__c}" rendered="{!isViewMode}" label="Check here to enable the Working Age Adults section" />
				<apex:pageBlockSectionItem />		
               	<apex:inputField value="{!Case_Management_Plan__c.CDP_WA_Choose_One_workingadults__c}"  id="chooseoneWorkingAdults" onchange="handleWorkingAdults(); return false;" label="Choose one of the following statements"  rendered="{!isEditMode}" />
                <apex:outputField value="{!Case_Management_Plan__c.CDP_WA_Choose_One_workingadults__c}" label="Choose one of the following statements"  rendered="{!isViewMode}" />
                <apex:pageBlockSectionItem />                
                <apex:pageBlockSectionItem >
					<apex:outputLabel value="Check All that Apply - Employed in integrated employment and chooses to:" for="selectedintEmployment" />
					<apex:selectCheckboxes value="{!selectedintEmployment}" style="margin-left:-13px" layout="pageDirection" id="selectedintEmployment" disabled="{!isViewMode}" >
						<apex:selectOption itemlabel="Retain current Job" itemvalue="Retain current Job" />
						<apex:selectOption itemlabel="Advance in current job (more hours, raise, new skills, promotion, etc.)" itemvalue="Advance in current job (more hours, raise, new skills, promotion, etc.)" />
						<apex:selectOption itemlabel="Get a new job" itemvalue="Get a new job" />
						<apex:selectOption itemlabel="Get an additional job" itemvalue="Get an additional job" />
						<apex:selectOption itemlabel="Retire - is at least 60 or will be this ISP year" itemvalue="Retire - is at least 60 or will be this ISP year" />
						<apex:selectOption itemlabel="No longer continue in integrated employment at this time" itemvalue="No longer continue in integrated employment at this time" />
					</apex:selectCheckboxes>
				</apex:pageBlockSectionItem>			
				 <apex:pageBlockSectionItem >
					<apex:outputLabel value="Check All that Apply - Currently not working in integrated employment and chooses to:" for="selectednonWorking" />
					<apex:selectCheckboxes value="{!selectednonWorking}" style="margin-left:-13px" layout="pageDirection" id="selectednonWorking" disabled="{!isViewMode}" >
						<apex:selectOption itemlabel="Get integrated employment" itemvalue="Get integrated employment" />
						<apex:selectOption itemlabel="Explore interests in integrated employment through an Employment Path, Discovery, or other time-limited service" itemvalue="Explore interests in integrated employment through an Employment Path, Discovery, or other time-limited service" />
						<apex:selectOption itemlabel="Retire - is at least 60 or will be this ISP year" itemvalue="Retire - is at least 60 or will be this ISP year" />
						<apex:selectOption itemlabel="Not explore integrated employment at this time" itemvalue="Not explore integrated employment at this time" />
					</apex:selectCheckboxes>
				</apex:pageBlockSectionItem>				
                <apex:inputTextArea value="{!Case_Management_Plan__c.CDP_WA_Potential_Barriers_integrated_job__c}"  id="barriersIntegrated" cols="40" rows="5" rendered="{!isEditMode}"/>
                <apex:outputField value="{!Case_Management_Plan__c.CDP_WA_Potential_Barriers_integrated_job__c}" rendered="{!isViewMode}"/>               
                <apex:inputTextArea value="{!Case_Management_Plan__c.CDP_WA_Intgrated_job_obstacle_Addressed__c}"  id="barriersAddresses" cols="40" rows="5" rendered="{!isEditMode}"/>
                <apex:outputField value="{!Case_Management_Plan__c.CDP_WA_Intgrated_job_obstacle_Addressed__c}" rendered="{!isViewMode}" />                
                <apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						Decision Not To Explore Employment :<br/>(<i>Complete this section only if the person chooses not to work in an integrated employment setting now and does not want a waiver-funded employment service at this time.</i>)
					</div>
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem />               
               <apex:pageBlockSectionItem >
					<apex:outputLabel value="Check at least one reason" for="selectednotToExplore" />
					<apex:selectCheckboxes value="{!selectednotToExplore}" style="margin-left:-13px" layout="pageDirection" id="selectednotToExplore" disabled="{!isViewMode}" onchange="handleOther('selectednotToExplore');">
						<apex:selectOption itemlabel="Discouraged by previous employment experiences" itemvalue="Discouraged by previous employment experiences" />
						<apex:selectOption itemlabel="Discouraged by others" itemvalue="Discouraged by others" />
						<apex:selectOption itemlabel="Transportation concerns" itemvalue="Transportation concerns" />
						<apex:selectOption itemlabel="Reluctant to change routine" itemvalue="Reluctant to change routine" />
						<apex:selectOption itemlabel="Unable to find a job that matches his/her skills, interests and abilities" itemvalue="Unable to find a job that matches his/her skills, interests and abilities" />
						<apex:selectOption itemlabel="Concern that he/she will lose his/her Social Security Disability and/or Medicaid benefit" itemvalue="Concern that he/she will lose his/her Social Security Disability and/or Medicaid benefit" />
						<apex:selectOption itemlabel="Significant health problems and/or health-related needs" itemvalue="Significant health problems and/or health-related needs" />
						<apex:selectOption itemlabel="Does not want to work" itemvalue="Does not want to work" />
						<apex:selectOption itemlabel="Does not believe he/she is able to work" itemvalue="Does not believe he/she is able to work" />
						<apex:selectOption itemlabel="Other" itemvalue="Other" />
					</apex:selectCheckboxes>
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionitem rendered="{!isEditMode}">
					<apex:outputLabel value="Describe" />
					<apex:inputField value="{!Case_Management_Plan__c.CDP_NE_Not_to_explore_Describe__c}" id="selectednotToExploreother" />
				</apex:pageBlockSectionitem>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_NE_Not_to_explore_Describe__c}" rendered="{!isViewMode}" />               
               <apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						Answer these questions:  :<br/><i>These answers must support the selections made above and must demonstrate how the decision was made. Ideally, these answers will provide a positive foundation for approaching employment in the future. Please ensure that the person and his/her supporters understand that he/she may change his/her mind at any time.</i></div>
				</apex:pageBlockSectionItem>               
               <apex:pageBlockSectionitem />               
               <apex:inputField value="{!Case_Management_Plan__c.CDP_DE_Person_int_Emp__c}"  label="1. Does the person want to work now in integrated employment?" id="nowinIntEmployment" rendered="{!isEditMode}" onchange="handleIntEmployment(); return false;"/>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_Person_int_Emp__c}" label="1. Does the person want to work now in integrated employment?" rendered="{!isViewMode}"/>               
               <apex:inputField value="{!Case_Management_Plan__c.CDP_DE_Person_int_Future__c}"  label="2. Does the person want to work in integrated employment in the future?" id="futureinIntEmployment" rendered="{!isEditMode}" onchange="handleIntEmployment(); return false;" />
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_Person_int_Future__c}" label="2. Does the person want to work in integrated employment in the future?" rendered="{!isViewMode}"/>               
               <apex:inputTextArea value="{!Case_Management_Plan__c.CDP_DE_Explain_Now_Future__c}" id="whyPersonnoWork" cols="40" rows="5" label="If the answer was NO to #1 and/or #2, please explain why the person does not want work now and/or in the future:" rendered="{!isEditMode}"/>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_Explain_Now_Future__c}"  label="If the answer was NO to #1 and/or #2, please explain why the person does not want work now and/or in the future:" rendered="{!isViewMode}"/>
               <apex:pageBlockSectionItem />
               <apex:inputField value="{!Case_Management_Plan__c.CDP_DE_Opportunity_to_Skills__c}"  label="3. Has the person had an opportunity to experience integrated employment that meets his/her skills and interests?" id="expIntegratedEmp" rendered="{!isEditMode}" html-data-rules="{&quot;Yes&quot;:[&quot;{!$Component.intempExperience}&quot;],&quot;No&quot;:[&quot;{!$Component.plantoRemedy}&quot;]}"/>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_Opportunity_to_Skills__c}" label="3. Has the person had an opportunity to experience integrated employment that meets his/her skills and interests?" rendered="{!isViewMode}"/>
               <apex:pageBlockSectionItem />
               <apex:inputTextArea value="{!Case_Management_Plan__c.CDP_DE_int_Emp_Exp__c}"  id="intempExperience" cols="40" rows="5" label="If yes, please briefly describe his/her integrated employment experience" rendered="{!isEditMode}"/>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_int_Emp_Exp__c}"  label="If Yes,please briefly describe his/her integrated employment experience" rendered="{!isViewMode}"/>
               <apex:inputTextArea value="{!Case_Management_Plan__c.CDP_DE_remedy_Situation__c}" id="plantoRemedy" cols="40" rows="5" label="If no, please describe why he/she has not had this opportunity and if there is a plan to remedy this situation" rendered="{!isEditMode}"/>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_remedy_Situation__c}"  label="If no,please describe why he/she has not had this opportunity and if there is a plan to remedy this situation" rendered="{!isViewMode}"/>
			   <apex:inputTextArea value="{!Case_Management_Plan__c.CDP_DE_Additional_Info__c}" id="additionalInfoDecision" cols="40" rows="5" label="4. Share any additional information about this decision here:" rendered="{!isEditMode}"/>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_Additional_Info__c}"  label="4. Share any additional information about this decision here:" rendered="{!isViewMode}"/>
			   <apex:pageBlockSectionItem />
			   <apex:inputField value="{!Case_Management_Plan__c.CDP_DE_Person_Change_mind__c}" id="perUnderstandExplore" label="5. Does the person understand that he/she can change his/her mind at any time during the next twelve months and decide to pursue, explore, or obtain individual, integrated employment?" rendered="{!isEditMode}"/>
               <apex:outputField value="{!Case_Management_Plan__c.CDP_DE_Person_Change_mind__c}" label="5. Does the person understand that he/she can change his/her mind at any time during the next twelve months and decide to pursue, explore, or obtain individual, integrated employment?" rendered="{!isViewMode}"/>
               
               
            	<apex:inputhidden value="{!Case_Management_Plan__c.CDP_IsValid__c}" id="cdp_isValid" />
				<apex:inputhidden value="{!Case_Management_Plan__c.CDP_Errors__c}" id="cdp_errors"/>
			</apex:pageBlockSection>
			
			<c:EvaluationResponseTable type="Employment Outcomes"
                           formId="{!$Component.FormID}"
                           uniqueId="Employment_Outcomes"
                           editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           showAddNew="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           enableReportButton="false"
                           cols="1"
                           caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
                           visiblityRowRules="{&quot;ISP_Is_there_a_paid_Service__c&quot; : { &quot;Yes&quot; : [&quot;ISP_Paid_Services__c&quot;]}}"
                           customLabels="[{&quot;field&quot;:&quot;ISP_Is_there_a_paid_Service__c&quot;, &quot;label&quot;:&quot;Paid supporting service?&quot;},
                           {&quot;field&quot;:&quot;ISP_Paid_Services__c&quot;, &quot;label&quot;:&quot;If so, what is it?&quot;},
                           {&quot;field&quot;:&quot;ISP_Note_if_Written_Implementation__c&quot;, &quot;label&quot;:&quot;Written implementation strategies expected?&quot;} ]"
                   
                      rendered="{!section == 'cdp' || section == 'Full View'}" />     
			   <!-- Career Development Plan End -->
			   
			<apex:pageBlockSection columns="1" title="Risk Management Plan" id="riskPlan_Alt1_Header" collapsible="true" rendered="{!section == 'risk' || section == 'Full View'}">
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Risk_Isvalid__c && Case_Management_Plan__c.Risk_Errors__c != 'No Errors'}" >
					<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Risk_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
				</apex:pageBlockSectionItem>
				<apex:inputTextArea value="{!Case_Management_Plan__c.Risk_Emergency_Preparedness__c}" id="risk_emergencyPrep" rendered="{!isEditMode}" cols="40" rows="5" label="Emergency preparedness (natural disasters, power outages, community disasters, etc.)"/>
				<apex:outputField value="{!Case_Management_Plan__c.Risk_Emergency_Preparedness__c}" rendered="{!isViewMode}" label="Emergency preparedness (natural disasters, power outages, community disasters, etc.)"/>
				<apex:inputTextArea value="{!Case_Management_Plan__c.Risk_Preventing_abuse__c}" id="risk_preventAbuse" rendered="{!isEditMode}" cols="40" rows="5" label="Preventing abuse (physical, emotional, financial, sexual, neglect)"/>
				<apex:outputField value="{!Case_Management_Plan__c.Risk_Preventing_abuse__c}" rendered="{!isViewMode}" label="Preventing abuse (physical, emotional, financial, sexual, neglect)"/>
				<apex:inputTextArea value="{!Case_Management_Plan__c.Risk_What_Happens__c}" id="risk_whatHappens" rendered="{!isEditMode}" cols="40" rows="5" label="What happens if the person can't be reached? (timelines for notifying others, who to contact, etc.)"/>
				<apex:outputField value="{!Case_Management_Plan__c.Risk_What_Happens__c}" rendered="{!isViewMode}" label="What happens if the person can't be reached? (timelines for notifying others, who to contact, etc.)"/>
				<apex:inputField value="{!Case_Management_Plan__c.Risk_Nursing_Care_Plan__c}" id="risk_nursingPlan" rendered="{!isEditMode}" label="Does this person have a Nursing Care Plan?" html-data-rules="{&quot;Yes&quot;:[&quot;{!$Component.risk_Home}&quot;,&quot;{!$Component.risk_Work}&quot;]}"/>
				<apex:outputField value="{!Case_Management_Plan__c.Risk_Nursing_Care_Plan__c}" rendered="{!isViewMode}" label="Does this person have a Nursing Care Plan?"/>
				<apex:pageBlockSectionItem />
			   <apex:pageBlockSectionItem >
			   		<apex:outputLabel value="Where Found" />
			   		<apex:outputText value="" /> 
			   </apex:pageBlockSectionItem>
			   <apex:inputField value="{!Case_Management_Plan__c.Risk_Home__c}" id="risk_Home" rendered="{!isEditMode}" label="Home"/>
			   <apex:outputField value="{!Case_Management_Plan__c.Risk_Home__c}" rendered="{!isViewMode}" label="Home" />
			   <apex:inputField value="{!Case_Management_Plan__c.Risk_Work__c}" id="risk_Work" rendered="{!isEditMode}" label="Work"/>
			   <apex:outputField value="{!Case_Management_Plan__c.Risk_Work__c}" rendered="{!isViewMode}" label="Work" />
			   <apex:pageBlockSectionItem />
			   <apex:pageBlockSectionItem >
			   		<div style="font-weight: bold; font-size: 12px;">
						Back-up Plans, in the event that primary support is not available 
					</div>
			   </apex:pageBlockSectionItem>
			   <apex:inputTextArea value="{!Case_Management_Plan__c.Risk_Backup_Plan_Home__c}" id="risk_backupHome" cols="40" rows="5" rendered="{!isEditMode}" label="Home"/>
			   <apex:outputField value="{!Case_Management_Plan__c.Risk_Backup_Plan_Home__c}" rendered="{!isViewMode}" label="Home" />
			   <apex:inputTextArea value="{!Case_Management_Plan__c.Risk_Work_School_Day_Supports__c}" id="risk_backupWork" cols="40" rows="5" rendered="{!isEditMode}" />
			   <apex:outputField value="{!Case_Management_Plan__c.Risk_Work_School_Day_Supports__c}" rendered="{!isViewMode}"  />
			   <apex:inputTextArea value="{!Case_Management_Plan__c.Risk_Other1__c}" id="risk_Other1" cols="40" rows="5" rendered="{!isEditMode}" />
			   <apex:outputField value="{!Case_Management_Plan__c.Risk_Other1__c}" rendered="{!isViewMode}"  />
			   <apex:inputTextArea value="{!Case_Management_Plan__c.Risk_Other2__c}" id="risk_Other2" cols="40" rows="5" rendered="{!isEditMode}" />
			   <apex:outputField value="{!Case_Management_Plan__c.Risk_Other2__c}" rendered="{!isViewMode}"  />
			    
			   <apex:inputhidden value="{!Case_Management_Plan__c.Risk_Errors__c}" id="risk_errors" />
			   <apex:inputhidden value="{!Case_Management_Plan__c.Risk_Isvalid__c}" id="risk_isvalid" />
			</apex:pageBlockSection>
			
			<apex:pageBlockSection columns="1" title="Chosen Case Management Services" id="chosenCaseMgmt_Alt1_Header" collapsible="true" rendered="{!section == 'ccms' || section == 'Full View'}">
				 <apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.CCMS_isValid__c && Case_Management_Plan__c.CCMS_Errors__c != 'No Errors'}" >
                   	<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.CCMS_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
                </apex:pageBlockSectionItem>
				 <apex:inputField value="{!Case_Management_Plan__c.CCM_Type__c}" id="ccmsType" rendered="{!isEditMode}" />
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Type__c}" rendered="{!isViewMode}" />
				 <apex:inputField value="{!Case_Management_Plan__c.CCM_Chosen_Provider__c}" id="ccmsChProv" rendered="{!isEditMode}" />
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Chosen_Provider__c}" rendered="{!isViewMode}" />
				 <apex:outputText value="{!Case_Management_Plan__c.Service_Assignment__r.Admission__r.Person_being_Served__r.PRIME_Number__c}" id="ccmsPrimeNum" label="Prime Number"  />
				 <apex:pageBlockSectionItem />
			   	 <apex:pageBlockSectionItem >
				 	<apex:outputLabel value="Authorized Dates" />
					<apex:outputText value="" />	
				 </apex:pageBlockSectionItem>
				 <apex:inputField value="{!Case_Management_Plan__c.CCM_Same_as_Plan_year__c}" id="ccmsSameplan" rendered="{!isEditMode}" html-data-rules="{&quot;0&quot;:[&quot;{!$Component.ccmStart}&quot;,&quot;{!$Component.ccmEnd}&quot;]}" />																									
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Same_as_Plan_year__c}" rendered="{!isViewMode}" />
				 <apex:inputField value="{!Case_Management_Plan__c.CCM_Start__c}" rendered="{!isEditMode}" id="ccmStart"/>
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Start__c}" rendered="{!isViewMode}" />
				 <apex:inputField value="{!Case_Management_Plan__c.CCM_End__c}" rendered="{!isEditMode}" id="ccmEnd" />
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_End__c}" rendered="{!isViewMode}" />
				 <apex:inputField value="{!Case_Management_Plan__c.CCM_Frequency_Monitoring__c}" id="ccmsFreqMon" rendered="{!isEditMode}" label="Required frequency of case management monitoring"  html-data-rules="{&quot;Other case management monitoring&quot;:[&quot;{!$Component.ccmfrequencyOther}&quot;]}" />
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Frequency_Monitoring__c}" rendered="{!isViewMode}" label="Required frequency of case management monitoring" />
				 <apex:inputField value="{!Case_Management_Plan__c.CCM_Specify_Other__c}"  id="ccmfrequencyOther" rendered="{!isEditMode}" label="Specify" />
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Specify_Other__c}" rendered="{!isViewMode}" label="Specify" />
				 <apex:inputTextArea value="{!Case_Management_Plan__c.CCM_Descriptors__c}" id="ccmsDesc" cols="60" rows="20" rendered="{!isEditMode}" label="Case management comments/descriptors of anticipated case management services during the year" /> 
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Descriptors__c}" rendered="{!isViewMode}" label="Case management comments/descriptors of anticipated case management services during the year" />
				 <apex:inputTextArea value="{!Case_Management_Plan__c.CCM_Persons_Preference__c}"  cols="40" rows="5" id="ccmsPersPref" rendered="{!isEditMode}" label="Person's service delivery preference" />
				 <apex:outputField value="{!Case_Management_Plan__c.CCM_Persons_Preference__c}" rendered="{!isViewMode}" label="Person's service delivery preference" />
			
				<apex:inputhidden value="{!Case_Management_Plan__c.CCMS_isValid__c}" id="ccms_isValid" />       
                <apex:inputhidden value="{!Case_Management_Plan__c.CCMS_Errors__c}" id="ccms_errors"/>
			</apex:pageBlockSection>
			
			<apex:pageBlockSection columns="1" title="Natural Supports, Community Resources, and Other Voluntary Services and Supports" id="othersuptsvc_Alt1_Header" collapsible="true" rendered="{!section == 'naturalSupports' || section == 'Full View'}" >
            	<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.NaturalSupports_isValid__c && Case_Management_Plan__c.NaturalSupports_Errors__c != 'No Errors'}" >
					<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.NaturalSupports_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
				</apex:pageBlockSectionItem>
            	<c:EvaluationResponseTable type="Other Services Supports"
                           formId="{!$Component.FormID}"
                           uniqueId="Other_Services_Supports"
                           editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           showAddNew="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           enableReportButton="false"
                           cols="1"
                           caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
                           customLabels="[{&quot;field&quot;:&quot;ISP_Supports_Services_Provided_by__c&quot;, &quot;label&quot;:&quot;Provided By&quot;}]"
                           showTitle="false"
                        /> 
			</apex:pageBlockSection>
			
			<apex:pageBlockSection columns="1" title="Chosen State Plan Personal Care (SPPC) services" id="sppc_Alt1_Header" collapsible="true" rendered="{!section == 'sppc' || section == 'Full View'}" >
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.SPPC_IsValid__c && Case_Management_Plan__c.SPPC_Errors__c != 'No Errors'}" >
                	<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.SPPC_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
 				</apex:pageBlockSectionItem>
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Section_Not_Applicable__c}" id="sppcSecNA" rendered="{!isEditMode}" html-data-rules="{&quot;0&quot;:[&quot;{!$Component.sppcServiceElement}&quot;,
																																			&quot;{!$Component.sppcServiceCode}&quot;,
																																			&quot;{!$Component.sppcUnits}&quot;,
																																			&quot;{!$Component.sppcUnitType}&quot;,
																																			&quot;{!$Component.sppcperFrequency}&quot;,
																																			&quot;{!$Component.sppcSameplan}&quot;,
																																			&quot;{!$Component.sppcStart}&quot;,
																																			&quot;{!$Component.sppcEnd}&quot;,
																																			&quot;{!$Component.sppcChosenProvider}&quot;,
																																			&quot;{!$Component.sppcListNeeds}&quot;,
																																			&quot;{!$Component.sppcPersonPref}&quot;
																																			]}"/>
				<apex:pageBlockSectionItem />
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Section_Not_Applicable__c}" rendered="{!isViewMode}" />		
				<apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						<i>Complete the following only if the person chooses State Plan Personal Care services: (limited to 20 hours per month unless an exception is authorized)</i>
					</div>
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem />   	
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Service_Element__c}"  id="sppcServiceElement" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Service_Element__c}" rendered="{!isViewMode}" />					
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Service_Code__c}"  id="sppcServiceCode" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Service_Code__c}" rendered="{!isViewMode}" />			
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Units__c}"  id="sppcUnits" rendered="{!isEditMode}"/>
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Units__c}" rendered="{!isViewMode}" />				
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Unit_Type__c}"  id="sppcUnitType" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Unit_Type__c}" rendered="{!isViewMode}" />				
				<apex:pageblockSectionItem />				
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Per_frequency__c}"  id="sppcperFrequency" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Per_frequency__c}" rendered="{!isViewMode}" />				
				<apex:pageBlockSectionItem >
				 	<apex:outputLabel value="Authorized Dates" />
					<apex:outputText value="" />	
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem />
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Same_as_Plan_Year__c}" rendered="{!isEditMode}" id="sppcSameplan" onchange="handleStartEnd('sppcSameplan','sppcStart','sppcEnd'); return false;" />																									
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Same_as_Plan_Year__c}" rendered="{!isViewMode}" />
				<apex:pageBlockSectionItem />
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_Start__c}" rendered="{!isEditMode}" id="sppcStart"/>
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Start__c}" rendered="{!isViewMode}" />
				<apex:inputField value="{!Case_Management_Plan__c.SPPC_End__c}" rendered="{!isEditMode}" id="sppcEnd" />
			 	<apex:outputField value="{!Case_Management_Plan__c.SPPC_End__c}" rendered="{!isViewMode}" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.SPPC_Chosen_Provider_types__c}" cols="40" rows="5" id="sppcChosenProvider" rendered="{!isEditMode}" label="Chosen provider type(s) & current rate(s) (PSW, independent contractor, provider organization, general business, etc.)" /> 
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Chosen_Provider_types__c}" rendered="{!isViewMode}" label="Chosen provider type(s) & current rate(s) (PSW, independent contractor, provider organization, general business, etc.)" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.SPPC_List_Needs_Identified__c}" cols="40" rows="5" id="sppcListNeeds" rendered="{!isEditMode}" label="List needs identified by the needs assessment that this service will address" /> 
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_List_Needs_Identified__c}" rendered="{!isViewMode}" label="List needs identified by the needs assessment that this service will address" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.SPPC_Person_Preference__c}" cols="40" rows="5" id="sppcPersonPref" rendered="{!isEditMode}" label="Person's preference on how this service is delivered" /> 
				<apex:outputField value="{!Case_Management_Plan__c.SPPC_Person_Preference__c}" rendered="{!isViewMode}" label="Person's preference on how this service is delivered" />	
				
				<apex:inputhidden value="{!Case_Management_Plan__c.SPPC_IsValid__c}" id="sppc_isValid" />       
                <apex:inputhidden value="{!Case_Management_Plan__c.SPPC_Errors__c}" id="sppc_errors"/>
						   
			</apex:pageBlockSection>
			
			
			<apex:pageBlockSection columns="1" title="Chosen K Plan Services" id="kPlan_Alt1_Header" collapsible="true" rendered="{!section == 'kplan' || section == 'Full View'}" >
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Kplan_isValid__c && Case_Management_Plan__c.Kplan_Errors__c != 'No Errors'}" >
                	<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Kplan_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
 				</apex:pageBlockSectionItem>
				<apex:inputField value="{!Case_Management_Plan__c.K_Plan_Section_Not_Applicable__c}" rendered="{!isEditMode}" >
					<apex:actionsupport event="onchange" status="pageProcessing" rerender="kPlan_Alt1_Header" />
				</apex:inputField>
				<apex:outputField value="{!Case_Management_Plan__c.K_Plan_Section_Not_Applicable__c}" rendered="{!isViewMode}" />
				
			   	<c:EvaluationResponseTable type="K Plan Services"
                           formId="{!$Component.FormID}"
                           uniqueId="K_Plan_Services"
                           editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           showAddNew="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           enableReportButton="false"
                           cols="1"
                           caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
                           visiblityRowRules="{&quot;ISP_Same_as_plan_year__c&quot; : { &quot;0&quot; : [&quot;ISP_Start__c&quot;,&quot;ISP_End__c&quot; ]}}"
                           customLabels="[{&quot;field&quot;:&quot;Label__c&quot;, &quot;label&quot;:&quot;Authorized Dates&quot;},
                           {&quot;field&quot;:&quot;ISP_Describe_Chosen_Services_Supports__c&quot;, &quot;label&quot;:&quot;Chosen provider type(s) & current rate(s)&quot;},
                           {&quot;field&quot;:&quot;ISP_List_Needs_Identified__c&quot;, &quot;label&quot;:&quot;List needs to be addressed&quot;} ]"
                           showtitle="false"
                   		   rendered="{!!Case_Management_Plan__c.K_Plan_Section_Not_Applicable__c}"
                   		 
                        />
                        
                <apex:inputhidden value="{!Case_Management_Plan__c.Kplan_isValid__c}" id="kplan_isValid" />       
                <apex:inputhidden value="{!Case_Management_Plan__c.Kplan_Errors__c}" id="kplan_errors"/>
			</apex:pageBlockSection>
			
			<apex:pageBlockSection columns="1" title="Chosen Waiver Services" id="waiver_Alt1_Header" collapsible="true" rendered="{!section == 'waiver' || section == 'Full View'}">
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Waiver_isValid__c && Case_Management_Plan__c.Waiver_Errors__c != 'No Errors'}" >
                	<apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Waiver_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
 				</apex:pageBlockSectionItem>
				<apex:inputField value="{!Case_Management_Plan__c.Waiver_Section_Not_Applicable__c}" rendered="{!isEditMode}" >
					<apex:actionsupport event="onchange" status="pageProcessing" rerender="waiver_Alt1_Header" />
				</apex:inputField>
				<apex:outputField value="{!Case_Management_Plan__c.Waiver_Section_Not_Applicable__c}" rendered="{!isViewMode}" />
				
				        <c:EvaluationResponseTable type="Waiver Services"
				                       formId="{!$Component.FormID}"
				                       uniqueId="Waiver_Services"
				                       editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           			   addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           				showAddNew="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
				                       enableReportButton="false"
				                       cols="1"
				                       caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
				                       visiblityRowRules="{&quot;ISP_Same_as_plan_year__c&quot; : { &quot;0&quot; : [&quot;ISP_Start__c&quot;,&quot;ISP_End__c&quot; ]}}"
				                       customLabels="[{&quot;field&quot;:&quot;Label__c&quot;, &quot;label&quot;:&quot;Authorized Dates&quot;},
				                       {&quot;field&quot;:&quot;ISP_Describe_Chosen_Services_Supports__c&quot;, &quot;label&quot;:&quot;Chosen provider type(s) & current rate(s)&quot;},
				                       {&quot;field&quot;:&quot;ISP_Identified_needs__c&quot;, &quot;label&quot;:&quot;List needs to be addressed&quot;} ]"
				                       showtitle="false"
				               		   rendered="{!!Case_Management_Plan__c.Waiver_Section_Not_Applicable__c}"
				               		   delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
				                    />
				                    
				<apex:inputhidden value="{!Case_Management_Plan__c.Waiver_isValid__c}" id="waiver_isValid" />       
                <apex:inputhidden value="{!Case_Management_Plan__c.Waiver_Errors__c}" id="waiver_errors"/>
                               
			</apex:pageBlockSection>
			
			<apex:pageBlockSection columns="1" title="Chosen K Plan Residential Service" id="kplanResidential_Alt1_Header" collapsible="true" rendered="{!section == 'kpr' || section == 'Full View'}">
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.KPR_isValid__c && Case_Management_Plan__c.KPR_Errors__c != 'No Errors'}" >
                   <apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.KPR_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
                </apex:pageBlockSectionItem>
				<apex:inputField value="{!Case_Management_Plan__c.KPR_Residential_Secton_Not_Applicable__c}" id="kprApplicable" rendered="{!isEditMode}" 
																onchange="handleKPRResidentialServices(); return false;" html-data-rules="{&quot;0&quot;:[&quot;{!$Component.kprServiceSetting}&quot;,
																																			&quot;{!$Component.kprChosenProvider}&quot;,
																																			&quot;{!$Component.kprSameplan}&quot;,
																																			&quot;{!$Component.kprStart}&quot;,
																																			&quot;{!$Component.kprEnd}&quot;,
																																			&quot;{!$Component.kprListNeeds}&quot;,
																																			&quot;{!$Component.kprPersonPref}&quot;
																																			
																																			]}"/>
				<apex:outputField value="{!Case_Management_Plan__c.KPR_Residential_Secton_Not_Applicable__c}" rendered="{!isViewMode}" />
				<apex:pageBlockSectionItem />		
				<apex:inputField value="{!Case_Management_Plan__c.KPR_Service_Setting__c}"  id="kprServiceSetting" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.KPR_Service_Setting__c}" rendered="{!isViewMode}" />
				<apex:inputField value="{!Case_Management_Plan__c.KPR_Chosen_Provider__c}"  id="kprChosenProvider" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.KPR_Chosen_Provider__c}" rendered="{!isViewMode}" />
				<apex:pageBlockSectionItem >
				 	<apex:outputLabel value="Authorized Dates" />
					<apex:outputText value="" />	
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem />
				<apex:inputField value="{!Case_Management_Plan__c.KPR_Same_as_Plan_Year__c}" rendered="{!isEditMode}" id="kprSameplan" onChange="handleStartEnd('kprSameplan','kprStart','kprEnd'); return false;" />																									
				<apex:outputField value="{!Case_Management_Plan__c.KPR_Same_as_Plan_Year__c}" rendered="{!isViewMode}" />
				<apex:pageBlockSectionItem />
				<apex:inputField value="{!Case_Management_Plan__c.KPR_Start__c}" rendered="{!isEditMode}" id="kprStart"/>
				<apex:outputField value="{!Case_Management_Plan__c.KPR_Start__c}" rendered="{!isViewMode}" />
				<apex:inputField value="{!Case_Management_Plan__c.KPR_End__c}" rendered="{!isEditMode}" id="kprEnd" />
			 	<apex:outputField value="{!Case_Management_Plan__c.KPR_End__c}" rendered="{!isViewMode}" />
			 	
			 	 <apex:pageBlockSectionItem >
					<apex:outputLabel value="The K Plan services already included in residential services" for="selectedKPRServices" />
					<apex:selectCheckboxes value="{!selectedKPRServices}" style="margin-left:-13px" layout="pageDirection" id="selectedKPRServices" disabled="{!isViewMode}" >
						<apex:selectOption itemlabel="Attendant care - ADL / IADL" itemvalue="Attendant care - ADL / IADL" />
						<apex:selectOption itemlabel="Skill training" itemvalue="Skill training" />
						<apex:selectOption itemlabel="Community Transportation" itemvalue="Community Transportation" />
					</apex:selectCheckboxes>
				</apex:pageBlockSectionItem>
				<apex:pageBlockSectionItem >
					<apex:outputLabel value="Additional K Plan services included in residential services" for="selectedKPRAdditional" />
					<apex:selectCheckboxes value="{!selectedKPRAdditional}" style="margin-left:-13px" layout="pageDirection" id="selectedKPRAdditional" disabled="{!isViewMode}" >
						<apex:selectOption itemlabel="Behavior supports" itemvalue="Behavior supports" />
						<apex:selectOption itemlabel="Nursing supports" itemvalue="Nursing supports" />
					</apex:selectCheckboxes>
				</apex:pageBlockSectionItem>
			 	<apex:inputTextArea value="{!Case_Management_Plan__c.KPR_List_Needs_Identified__c}" cols="40" rows="5" id="kprListNeeds" rendered="{!isEditMode}" label="List identified needs that this service will address" /> 
				<apex:outputField value="{!Case_Management_Plan__c.KPR_List_Needs_Identified__c}" rendered="{!isViewMode}" label="List identified needs that this service will address" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.KPR_Person_Preference_Service__c}" cols="40" rows="5" id="kprPersonPref" rendered="{!isEditMode}" label="Person's preference on how this service is delivered" /> 
				<apex:outputField value="{!Case_Management_Plan__c.KPR_Person_Preference_Service__c}" rendered="{!isViewMode}" label="Person's preference on how this service is delivered" />
				
				<apex:inputhidden value="{!Case_Management_Plan__c.KPR_isValid__c}" id="kpr_isValid" />       
                <apex:inputhidden value="{!Case_Management_Plan__c.KPR_Errors__c}" id="kpr_errors"/>
				</apex:pageBlockSection>
				
				<apex:pageBlockSection collapsible="false" id="ctts_Alt1_Header" columns="1" rendered="{!section == 'ctts' || section == 'Full View'}"  title="Community Transportation Services">
				<apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						Specific to travel to and from vocational program. Complete DD 53 budget.
					</div>
				</apex:pageBlockSectionItem>	
				<c:EvaluationResponseTable type="Community Transportation Services"
	                       formId="{!$Component.FormID}"
	                       uniqueId="Community_Transportation_Services"
	                       editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
	                       addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
	                       showAddNew="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
	                       enableReportButton="false"
	                       cols="1"
	                       caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
	                       visiblityRowRules="{&quot;ISP_Same_as_plan_year__c&quot; : { &quot;0&quot; : [&quot;ISP_Start__c&quot;,&quot;ISP_End__c&quot; ]}}"
	                       customLabels="[{&quot;field&quot;:&quot;Label__c&quot;, &quot;label&quot;:&quot;Authorized Dates&quot;},
	                       	{&quot;field&quot;:&quot;ISP_Describe_Chosen_Services_Supports__c&quot;, &quot;label&quot;:&quot;Chosen provider type or description of service&quot;} ]"
	                       showTitle="false"
	                       delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                 		 />	
			</apex:pageBlockSection>
                 	
			<apex:pageBlockSection columns="1" id="addlChosenServices_Alt1_Header" collapsible="true" title="Additional Chosen Services" rendered="{!section == 'adlchosen' || section == 'Full View'}">
				<apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						Use to record General Fund services as well as overflow for any of the above Chosen Services.
					</div>
				</apex:pageBlockSectionItem>
				<c:EvaluationResponseTable type="Additional Chosen Services"
		                         formId="{!$Component.FormID}"
		                         uniqueId="Additional_Chosen_Services"
		                         editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
		                         addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
		                         showAddNew="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
		                         enableReportButton="false"
		                         cols="1"
		                         caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
		                         customLabels="[{&quot;field&quot;:&quot;ISP_Describe_service_setting__c&quot;, &quot;label&quot;:&quot;Describe service setting, service code, # units, frequency, authorized dates, and chosen provider type as applicable&quot;},
		                         {&quot;field&quot;:&quot;ISP_Identified_needs__c&quot;, &quot;label&quot;:&quot;List identified needs that this service will address&quot;},
		                         {&quot;field&quot;:&quot;ISP_Person_Preference_Service_Delivery__c&quot;, &quot;label&quot;:&quot;Person's service delivery preference&quot;} ]"
		                         showTitle="false"
		                         delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
		                         
		                        
	                      />
            </apex:pageBlockSection>
			
			<apex:pageBlockSection columns="1" title="Differences" id="diff_Alt1_Header" collapsible="true" rendered="{!section == 'differences' || section == 'Full View'}" >
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Differences_Isvalid__c && Case_Management_Plan__c.Differences_Errors__c != 'No Errors'}" >
		            <apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Differences_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
               </apex:pageBlockSectionItem>
				<apex:inputTextArea value="{!Case_Management_Plan__c.DIF_Plan_and_Person__c}" id="diff_planPerson" rows="5" cols="40" label="Note any differences between the contents of this plan and what the person wants" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.DIF_Plan_and_Person__c}" label="Note any differences between the contents of this plan and what the person wants" rendered="{!isViewMode}" />
				<apex:inputTextArea value="{!Case_Management_Plan__c.DIF_Plan_and_OtherISP__c}" id="diff_planOther" rows="5" cols="40" label="Note any differences between the contents of this plan and what any other ISP contributor wants" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.DIF_Plan_and_OtherISP__c}" label="Note any differences between the contents of this plan and what any other ISP contributor wants" rendered="{!isViewMode}" />
				
				<apex:inputhidden value="{!Case_Management_Plan__c.Differences_Isvalid__c}" id="differences_isValid" />       
                <apex:inputhidden value="{!Case_Management_Plan__c.Differences_Errors__c}" id="differences_errors"/>
			</apex:pageBlockSection>
			
			<div class="blockbtns"  >
                <apex:commandButton value="Refresh Legal Relationships"  action="{!addorRefreshLegal}" reRender="legalRel_Alt1_Header,pageMessages" status="pageProcessing" rendered="{!(section == 'legal' || section == 'Full View' ) && isEditMode}" />
           	</div>
			<apex:pageBlockSection columns="1" title="Legal Relationships" id="legalRel_Alt1_Header" collapsible="true" rendered="{!section == 'legal' || section == 'Full View'}" >
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Leg_isValid__c && Case_Management_Plan__c.Leg_Errors__c != 'No Errors'}" >
		            <apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Leg_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
               </apex:pageBlockSectionItem>
				<apex:outputField value="{!Case_Management_Plan__c.Leg_Parents__c}" id="leg_parents" label="Parent(s) of minor child who retain parental rights" />
				<apex:outputField value="{!Case_Management_Plan__c.Leg_Guardians__c}" id="leg_guardian" label="Legal Representative/Guardian(s), if any" />
				<apex:inputField value="{!Case_Management_Plan__c.Leg_Scope_of_authority__c}" id="leg_scope" rendered="{!isEditMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.Leg_Scope_of_authority__c}" rendered="{!isViewMode}" />
				<apex:outputField value="{!Case_Management_Plan__c.Leg_Designated_Representative_Planning__c}" label="Designated Representative(s) for service planning, if any"/>
				<apex:outputField value="{!Case_Management_Plan__c.Leg_Designated_Representative_Employer__c}" label="Designated Representative(s) for employer representative/employer of record issues, if any"/>
				<apex:pageBlockSectionItem rendered="{!isEditMode}" >
					<apex:outputLabel for="leg_healthrep" Value="Health Care Representative, if any" />
					<apex:SelectList value="{!Case_Management_Plan__c.Leg_Health_Care_Representative__c}" id="leg_healthrep" size="1" multiselect="false" >
						<apex:selectOptions value="{!healthCareReps}"/>
					</apex:SelectList>
				</apex:pageBlockSectionItem>
				<apex:outputField value="{!Case_Management_Plan__c.Leg_Health_Care_Representative__c}" rendered="{!isViewMode}" />
				<apex:inputField value="{!Case_Management_Plan__c.Leg_Appointment_Date__c}" id="leg_appdate" rendered="{!isEditMode}" />
			   	<apex:outputField value="{!Case_Management_Plan__c.Leg_Appointment_Date__c}" rendered="{!isViewMode}" />
			   	<apex:inputField value="{!Case_Management_Plan__c.Leg_Type_of_Appointment__c}" id="leg_appType" rendered="{!isEditMode}" />
			   	<apex:outputField value="{!Case_Management_Plan__c.Leg_Type_of_Appointment__c}" rendered="{!isViewMode}" />
			   	<apex:outputField value="{!Case_Management_Plan__c.Leg_Representative_Payee__c}" />
			   	<apex:outputField value="{!Case_Management_Plan__c.Leg_Conservators__c}" />
			   	<apex:inputTextArea value="{!Case_Management_Plan__c.Leg_Any_other_Legal_Documents__c}" label="Any other Legal Documents on file limiting personal decision making" cols="40" rows="5" rendered="{!isEditMode}" />
			   	<apex:outputField value="{!Case_Management_Plan__c.Leg_Any_other_Legal_Documents__c}" label="Any other Legal Documents on file limiting personal decision making" rendered="{!isViewMode}" />
			   	
			   	<apex:inputhidden value="{!Case_Management_Plan__c.Leg_Errors__c}" id="leg_errors" />
			   	<apex:inputhidden value="{!Case_Management_Plan__c.Leg_isValid__c}" id="leg_isvalid" />
			</apex:pageBlockSection>
			
			<a id="acknowledgements" />
			<apex:pageBlockSection columns="1" title="Acknowledgements" id="ack_Alt1_Header" collapsible="true" rendered="{!section == 'acknowledgements' || section == 'Full View'}">
				<apex:pageBlockSectionItem rendered="{! !Case_Management_Plan__c.ACK_isValid__c && Case_Management_Plan__c.ACK_Errors__c != 'No Errors'}" >
		            <apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.ACK_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
               </apex:pageBlockSectionItem>
				
				<apex:inputField value="{!Case_Management_Plan__c.ACK_Check_Support__c}" id="ackCheckSupport" rendered="{!isEditMode}" html-data-rules="{&quot;0&quot;: [&quot;{!$Component.ackRights}&quot;]}"/>
			   	<apex:outputField value="{!Case_Management_Plan__c.ACK_Check_Support__c}" rendered="{!isViewMode}" />
			   	
			   	<apex:inputTextArea value="{!Case_Management_Plan__c.ACK_Understand_Rights__c}" id="ackRights" rendered="{!isEditMode}" rows="5" cols="40" label="Describe the supports the person needs to understand his/her rights or to understand this plan, if any"/>
			   	<apex:outputField value="{!Case_Management_Plan__c.ACK_Understand_Rights__c}" rendered="{!isViewMode}" label="Describe the supports the person needs to understand his/her rights or to understand this plan, if any" />
			   	
			   	 <apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						<u>Person Receiving Services </u></div>
				</apex:pageBlockSectionItem>
				
               
              	<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackReflectServices"  value="Does this ISP reflect the services the person chooses and the outcomes the person wants to work toward?"  styleClass="tableLabel"/>
          				<apex:selectRadio id="ackReflectServices" value="{!Case_Management_Plan__c.ACK_PR_Reflect_Services__c}" disabled="{!isViewMode}"  onchange="handleAckDescribe();" >
							<apex:selectoption itemvalue="Yes" itemlabel="Yes"  />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno"/>
							<apex:selectoption itemvalue="Declined" itemlabel="Declined" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackPlanningProcess" value="Has the person been provided information about the planning process and how to request changes and updates to the ISP?"  styleClass="tableLabel"/>
          				<apex:selectRadio id="ackPlanningProcess" value="{!Case_Management_Plan__c.ACK_PR_Provided_Info_Planning__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();">
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackmeetingLocation" value="Did the person choose the location of their ISP meeting?"  styleClass="tableLabel" />
          				<apex:selectRadio id="ackmeetingLocation" value="{!Case_Management_Plan__c.ACK_PR_ISP_Meeting_Location__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();" >
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno"/>
							<apex:selectoption itemvalue="Declined" itemlabel="Declined" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackdevParticipation" value="Did the person choose who participated in their ISP development?"  styleClass="tableLabel" />
          				<apex:selectRadio id="ackdevParticipation" value="{!Case_Management_Plan__c.ACK_PR_ISP_Development__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();">
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
							<apex:selectoption itemvalue="Declined" itemlabel="Declined" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackscpaReview" value="Did the SC/PA review the services that are available to the person?"  styleClass="tableLabel" />
          				<apex:selectRadio id="ackscpaReview" value="{!Case_Management_Plan__c.ACK_PR_SCPA_Review__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();">
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
							<apex:selectoption itemvalue="Declined" itemlabel="Declined" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackDHSRights" value="Did the person receive notification of his/her DHS rights?" styleClass="tableLabel" />
          				<apex:selectRadio id="ackDHSRights" value="{!Case_Management_Plan__c.ACK_PR_Recieve_DHR__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();">
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
			   	
			   	 <apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						<u>Families and/or Guardian who provide support</u></div>
				</apex:pageBlockSectionItem>
			   	
			   	<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackfamneedFam" value="Does this ISP reflect what is needed for the family to effectively provide supports?"  styleClass="tableLabel" />
          				<apex:selectRadio id="ackfamneedFam" value="{!Case_Management_Plan__c.ACK_Family_Needed_Family__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();" >
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
							<apex:selectoption itemvalue="N/A" itemlabel="N/A" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
					<div style="font-weight: bold; font-size: 12px;">
						<u>ISP Team </u>- Does this ISP reflect</div>
				</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackIndependence" value="Independence: Having control and choice over one's own life"  styleClass="tableLabel" />
          				<apex:selectRadio id="ackIndependence" value="{!Case_Management_Plan__c.ACK_ISP_Independence__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();" >
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackIntegration" value="Integration: Living near and using the same community resources and participating in the same activities as, and together with, people without disabilities"  styleClass="tableLabel" />
          				<apex:selectRadio id="ackIntegration" value="{!Case_Management_Plan__c.ACK_ISP_Integration__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();" >
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           		
           		<apex:pageBlockSectionItem >
              		<apex:outputLabel for="ackProductivity" value="Productivity: Engaging in contributions to a household or community; or engaging in income-producing work that is measured through improvements in income level, employment status, or job advancement" styleClass="tableLabel" />
          				<apex:selectRadio id="ackProductivity" value="{!Case_Management_Plan__c.ACK_ISP_Productivity__c}" disabled="{!isViewMode}" onchange="handleAckDescribe();">
							<apex:selectoption itemvalue="Yes" itemlabel="Yes" />
							<apex:selectoption itemvalue="No" itemlabel="No" html-data-name="ackno" />
						</apex:selectRadio>
           		</apex:pageBlockSectionItem>
           	
           		<apex:inputTextArea value="{!Case_Management_Plan__c.ACK_ISP_Describe__c}" id="ackDescribe" cols="40" rows="5" label="Describe the reason for any question above remaining NO and the plan to address it" rendered="{!isEditMode}" />
           		<apex:outputField value="{!Case_Management_Plan__c.ACK_ISP_Describe__c}" label="Describe the reason for any question above remaining NO and the plan to address it" rendered="{!isViewMode}" />
           		
           		<apex:inputhidden value="{!Case_Management_Plan__c.ACK_isValid__c}" id="ack_isValid" />       
                <apex:inputhidden value="{!Case_Management_Plan__c.ACK_Errors__c}" id="ack_errors"/>
           		
			</apex:pageBlockSection>
			
			<apex:pageBlockSection columns="1" rendered="{!section == 'evaluation' || section == 'Full View'}" > 
			<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Evaluation_isValid__c && Case_Management_Plan__c.Evaluation_Errors__c != 'No Errors'}" >
					<apex:outputpanel >
						<div style="background-color: #e74c3c;">
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Evaluation_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
				</apex:pageBlockSectionItem>
				<c:EvaluationResponseTable type="Evaluation"
                           formId="{!$Component.FormID}"
                           uniqueId="Evaluation"
                           editEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           addEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                           showAddNew="true"
                           enableReportButton="false"
                           cols="1"
                           caseMgmtplanparentId="{!Case_Management_Plan__c.Id}"
                           visiblityRowRules="{&quot;ISP_Risks__c&quot; : {&quot;Other&quot; : [&quot;ISP_Specify_Other__c&quot;]}}"
                           delEnabled="{!Case_Management_Plan__c.Status__c == 'Inactive Draft'}"
                   			
                 />
                        
           		<apex:inputHidden value="{!Case_Management_Plan__c.Desired_outcomes_Errors__c}" />
           		<apex:inputHidden value="{!Case_Management_Plan__c.Desired_Outcomes_IsValid__c}" />
			</apex:pageBlockSection>
			
			<apex:pageBlockSection title="Agreement to this Plan" columns="1" id="agr_Alt1_Header" collapsible="true" rendered="{!section == 'agreement' || section == 'Full View'}" >
				<apex:pageBlockSectionItem rendered="{!!Case_Management_Plan__c.Agreement_isValid__c && Case_Management_Plan__c.Agreement_Errors__c != 'No Errors'}" >
		            <apex:outputpanel >
						<div style="background-color: #e74c3c;" >
							<ul style="color:white; font-size: 15px;">
								<apex:outputText value="{!Case_Management_Plan__c.Agreement_Errors__c}" escape="false" />
							</ul>
						</div>
					</apex:outputpanel>
               </apex:pageBlockSectionItem>
				<apex:outputPanel style="font-weight: bold;" >
					These people agree to this plan and associated documents as reflecting the persons strengths and preferences, support needs as identified by an assessment, and the services and supports that will assist the person to achieve identified desired outcomes.
						<ul>
							<li>Services Coordinator/Personal Agent/ODDS Residential Specialist: Ensure the plan meets the persons current service needs and complies with requirements for the chosen service setting(s) and associated funding</li>
							<li>Providers: Agree to implement and provide the supports that have been designated as their responsibility in this ISP. A signed contract, job description, or service agreement may be used in lieu of this signature page</li>
						</ul>
						
				</apex:outputPanel>
				
				<apex:outputPanel >
						<apex:commandButton value="Add Names" onClick="showAddContributor(); return false;" style="float:right;"/>
						<apex:commandButton value="Refresh Names" style="float:right;" action="{!refreshContributors}" reRender="agr_Alt1_Header,pageMessages" status="pageProcessing"/>
				</apex:outputPanel>
				
				<apex:pageBlockTable value="{!contributors}" id="contributorsTable" var="c" headerClass="tbl-header" rowClasses="tmn-row-odd, tmn-row-even" >
                    <apex:column headerValue="Action" rendered="{!Case_Management_plan__c.Status__c == 'Inactive Draft'}">
                        <apex:outputPanel > 
                        	<a href="#" onclick="showEditContributor('{!c.Id}');return false; ">Edit</a>
                        	<apex:variable var="a" value="" rendered="{!c.ISP_Type_of_Contributor__c != 'TypeA'}">
                        		<a href="#" onclick="deleteContributor('{!c.Id}');return false; ">Del</a>
                        	</apex:variable>
                        </apex:outputPanel>
                    </apex:column>
                    <apex:column value="{!c.ISP_Contributor_Name__c}" headerValue="Name"/>
                    <apex:column value="{!c.ISP_Title_Relationship_Person__c}" />
                    <apex:column value="{!c.ISP_Contributor_Risk_Identification_Tool__c}" />
                    <apex:column value="{!c.ISP_Signature_Required__c}" />
                    <apex:column value="{!c.ISP_Present_at_Meeting__c}" />
                    <apex:column value="{!c.CreatedDate}" />
                </apex:pageBlockTable>
			</apex:pageBlockSection>
		
		</apex:pageBlock>
		
		<apex:outputPanel id="dialog-confirm-navigation" title="Confirm Save" style="display:none;" styleClass="ui-dialog ui-widget ui-widget-content ui-corner-all">
			<apex:outputPanel layout="inline">
			<b>Do you want to save before navigating away?</b>
				<apex:pageblock mode="maindetail">
					<apex:pageBlockButtons location="bottom">
						<apex:commandButton value="Yes"  onClick="handleAllErrors('{!section}',landingSection,sectionCat); return false;"/>
						<apex:commandButton value="No" onClick="redirect(landingSection, sectionCat); return false;"/>
						<apex:commandButton value="Cancel" onClick="closeDialog('dialog-confirm-navigation', 'span');"/>
					</apex:pageBlockButtons>
				</apex:pageblock>
			</apex:outputPanel>
		</apex:outputPanel>
		
<!-- 		<apex:outputPanel id="dialog-confirm-navigation" title="Confirm save" layout="block" > -->
<!-- 		<apex:outputPanel layout="inline"> -->
<!-- 			<apex:outputPanel layout="inline" styleClass="ui-icon ui-icon-alert" style="float:left; margin:0 7px 10px 0;"> -->
<!-- 			</apex:outputPanel> -->
<!-- 			Do you want to save before navigating away? -->
<!-- 		</apex:outputPanel> -->
<!-- 		<input type="button" onClick="handleAllErrors('{!section}',landingSection,sectionCat); return false;" value="Yes" /> -->
<!-- 		<input type="button" onClick="handleAllErrors('{!section}',landingSection,sectionCat); return false;" value="No" /> -->
<!-- 		<input type="button" onClick="handleAllErrors('{!section}',landingSection,sectionCat); return false;" value="Cancel" /> -->
<!-- 	</apex:outputPanel> -->
				
		 <apex:pageBlock mode="maindetail" id="relatedPartiesListId" rendered="{!section == 'relparty' || section == 'Full View'}">
            <apex:pageBlockButtons location="top" rendered="{!isEditMode}" >
	            <div class="blockbtns">
	                <apex:commandButton value="Add Related Party" onClick="showAddRelParty(); openDialog('relatedPartyModal', 'span', 'Add Related Party', 800); return false;" />
	            </div>
            </apex:pageBlockButtons>
            <apex:pageBlockSection title="Related Parties" columns="1" id="relatedParties_Alt1_Header" collapsible="true">
                <apex:pageBlockTable value="{!relParties}" id="rpartyTable" var="relParty" headerClass="tbl-header" rowClasses="tmn-row-odd, tmn-row-even" >
                    <apex:column headerValue="Action">
                        <apex:outputPanel rendered="{!$ObjectType.Related_Party__c.updateable}"> <a href="#" onclick="loadRelatedParty('{!relParty.Id}');return false; ">Edit</a>
                        </apex:outputPanel>
                    </apex:column>
                    <apex:column value="{!relParty.Type__c}" />
                    <apex:column value="{!relParty.Name}" />
                    <apex:column value="{!relParty.Address__c}" />
                    <apex:column value="{!relParty.Email__c}" />
                    <apex:column value="{!relParty.Phone__c}" />
                    <apex:column value="{!relParty.Phone_1_Type__c}" />
                    <apex:column value="{!relParty.Phone_2__c}" />
                    <apex:column value="{!relParty.Phone_2_Type__c}" />
                    <apex:column value="{!relParty.Status__c}" />
                    <apex:column value="{!relParty.Comments__c}" />
                    <apex:column value="{!relParty.CreatedDate}" />
                </apex:pageBlockTable>
                <script type="text/javascript">
                    relPartyData = '{!relPartiesJSON}';
                </script>
            </apex:pageBlockSection>
        </apex:pageBlock>
        
        <!-- Add Related Party modal. -->
        <apex:outputPanel id="relatedPartyModal" style="display:none; dispaly: block; height: 500px;">

            <apex:pageBlock title="Add Related Party" >
                <apex:pageblockButtons location="bottom">
                    <input type="button" value="Save" onClick="relatedPartySave(true); " class="btn" />
                    <input type="button" value="Save & New" onClick="relatedPartySave(false);" class="btn" />
                    <input type="button" value="Cancel" onClick="closeDialog('relatedPartyModal', 'span'); $('#relatedPartyErrors').html('');return false;" class="btn" />
                </apex:pageblockButtons>
                <apex:facet name="header">
                    <p><strong>Add a related party below:</strong>
                    </p>
                </apex:facet>
                <div id="relatedPartyErrors" style="color:red" />
                <apex:pageBlockSection columns="2" id="relatedPartyEntry">
                    <apex:inputField value="{!relParty.Name}" id="relatedPartyEntry_Name" />
                    <apex:inputField value="{!relParty.Type__c}" id="relatedPartyEntry_Type" />

                    <apex:inputField value="{!relParty.Address__c}" id="relatedPartyEntry_Address" />
                    <apex:inputField value="{!relParty.Email__c}" id="relatedPartyEntry_Email" />

                    <apex:inputField value="{!relParty.Phone__c}" id="relatedPartyEntry_Phone" />
                    <apex:inputField value="{!relParty.Phone_1_Type__c}" id="relatedPartyEntry_Phone_1_Type" />

                    <apex:inputField value="{!relParty.Phone_2__c}" id="relatedPartyEntry_Phone_2" />
                    <apex:inputField value="{!relParty.Phone_2_Type__c}" id="relatedPartyEntry_Phone_2_Type" />
                </apex:pageBlockSection>
                <apex:pageBlockSection columns="1" id="relatedPartyEntry2">
                    <apex:inputField value="{!relParty.Comments__c}" style="width: 90%;" id="relatedPartyEntry_Comments" />
                    <apex:inputField value="{!relParty.Status__c}" id="relatedPartyEntry_Status" />
                    <apex:outputPanel style="display:none">
                        <apex:inputHidden value="{!relParty.Id}" id="relatedPartyEntry_Id" />
                    </apex:outputPanel>
                </apex:pageBlockSection>
            </apex:pageBlock>
        </apex:outputPanel>
        
        <apex:outputPanel id="contributorModal" style="display:none; dispaly: block; height: 500px;"> 
        	<apex:pageBlock title="Add Contributors and Signatures" id="contributorEntryBlock">
                <apex:pageblockButtons location="bottom">
                    <input type="button" value="Save" onClick="contributorSave(true); " class="btn" />
                    <input type="button" value="Save & New" onClick="contributorSave(false);" class="btn" />
                    <input type="button" value="Cancel" onClick="closeDialog('contributorModal', 'span'); $('#contributorErrors').html('');return false;" class="btn" />
                </apex:pageblockButtons>
                <apex:facet name="header">
                    <p><strong>Add a Contributor and Signature below:</strong>
                    </p>
                </apex:facet>
        
        		 <div id="contributorErrors" style="color:red" />
        		 <apex:pageBlockSection columns="1" id="contributorEntry">
        		 	<apex:pageBlockSectionItem rendered="{!contributor.ISP_Type_of_Contributor__c == 'TypeD'}" >
						<apex:outputLabel for="contributorEntry_contributorName" Value="Name--Title" id="contributorEntry_contributorNameLabel"/>
						<apex:SelectList value="{!contributor.ISP_Contributor_Name__c}" size="1" multiselect="false" id="contributorEntry_contributorName">
							<apex:selectOptions value="{!contributorNames}"/>
						</apex:SelectList>
					</apex:pageBlockSectionItem>
                    <apex:outputField value="{!contributor.ISP_Contributor_Name__c}" label="Name--Title" id="contributorEntry_contributorNameRead" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}" />
<!--                     <apex:inputField value="{!contributor.ISP_Title_Relationship_Person__c}" id="contributorEntry_Title" rendered="{!contributor.ISP_Type_of_Contributor__c == 'TypeD'}" /> -->
<!--                     <apex:outputField value="{!contributor.ISP_Title_Relationship_Person__c}" id="contributorEntry_TitleRead" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}"  /> -->
                    <apex:inputField value="{!contributor.ISP_Contributor_Risk_Identification_Tool__c}" id="contributorEntry_Contributor" />
<!--                     <apex:outputField value="{!contributor.ISP_Contributor_Risk_Identification_Tool__c}" id="contributorEntry_ContributorRead" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}"/> -->
                    <apex:inputField value="{!contributor.ISP_Signature_Required__c}" id="contributorEntry_SignRequired" rendered="{!contributor.ISP_Type_of_Contributor__c == 'TypeD'}" html-data-rules="{&quot;1&quot;: [&quot;{!$Component.contributorEntry_PresentatMeeting}&quot;]}"/>
                    <apex:outputField value="{!contributor.ISP_Signature_Required__c}" id="contributorEntry_SignRequiredRead" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}"/>
                    <apex:inputField value="{!contributor.ISP_Present_at_Meeting__c}" id="contributorEntry_PresentatMeeting" />
                </apex:pageBlockSection>
        		 <apex:outputPanel style="display:none">
                        <apex:inputHidden value="{!contributor.Id}" id="contributorEntry_Id" />
                        <apex:inputHidden value="{!contributor.ISP_Type_of_Contributor__c}" id="contributorEntry_Type" />
                        
                        <apex:inputhidden value="{!contributor.ISP_Contributor_Name__c}" id="contributorEntry_contributorNameHidden" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}" />
<!--                         <apex:inputhidden value="{!contributor.ISP_Title_Relationship_Person__c}" id="contributorEntry_TitleHidden" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}"  /> -->
<!--                         <apex:inputhidden value="{!contributor.ISP_Contributor_Risk_Identification_Tool__c}" id="contributorEntry_ContributorHidden" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}"/> -->
                        <apex:inputHidden value="{!contributor.ISP_Signature_Required__c}" id="contributorEntry_SignRequiredHidden" rendered="{!contributor.ISP_Type_of_Contributor__c != 'TypeD'}"/>
             	 </apex:outputPanel>
       		 </apex:pageBlock>
        </apex:outputPanel>
	  </apex:form>
	</td>
  </tr>
</table>

	
	
	<apex:actionStatus id="pageProcessing">
		<apex:facet name="start">
			<div style="opacity:0.8; background-color:#ccc; position:fixed; width:100%; height:100%; top:0px; left:0px; z-index:2000;"></div>
			<div style="position: fixed; left:50%; top:50%; background-color: white; border: 2px solid gray; padding: 2px; z-index: 2000;">
				<span><img class="waitingImage" src="/img/loading.gif" title="Please Wait..." /> Processing . . . </span>
			</div>
		</apex:facet>
		<apex:facet name="stop" />
	</apex:actionStatus>
	<script>
		function setFocusOnLoad() {}
		$ = jQuery.noConflict();
		var isModified = false;
		var landingSection = '';
		var sectionCat = '';
		
		jQuery(document).ready(function ($) {
		
			$('body').on("change", function(event) {
				applyRulesToField(event.target);
				applyShowHideRulesToField(event.target);
			});
			
			window.setUpFields = function() {
				$('body input, body select').each(function(_, target) {
					applyRulesToField(target);
					applyShowHideRulesToField(target);
				});
				
				// set isModified to true on a field value change
				$('[id$=FormId] input, [id$=FormId] textarea, [id$=FormId] select').on("change", function(event) {
					isModified = true;
				});
			};
			setUpFields();
			
			
			if({!isEditMode} ){
				if('{!section}' == 'kpr'){
					handleKPRResidentialServices();
				}else if('{!section}' == 'cdp'){
					handleCDPWACheckAll();
					handleWorkingAdults();
					handleOther('selectednotToExplore');
					handleIntEmployment();
				}else if('{!section}' == 'acknowledgements'){
					handleAckDescribe();
				}
				
			}
			
		
		}); 	//---------------end ready-----------------------------
		
		validateModified = function(targetSection, isSection){
			if(isModified && {!Case_Management_Plan__c.Status__c == 'Inactive Draft'}){
				landingSection= targetSection;
				sectionCat = isSection; //decides whether its a section in ISP page or Category in Risk tool
				openDialog('dialog-confirm-navigation', 'span', 'Confirm Save', 350);
			}else{
				redirect(targetSection, isSection);
			}
		}
		
		handleKPRResidentialServices = function(){
			$ = jQuery.noConflict();
			if(!$('[id$=kprApplicable]').is(':checked') ){
				$('input[id*=selectedKPRServices]').each(function (index, element) {
					$(element).prop('disabled', false);
					//$(element).prop('checked', true);
					
				});
				$('input[id*=selectedKPRAdditional]').each(function (index, element) {
					$(element).prop('disabled', false);
				});
			}else{
				$('input[id*=selectedKPRServices]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
					
				});
				$('input[id*=selectedKPRAdditional]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
				});
			
			}
		
		}
		
		handleCDPStudent = function(){
			$ = jQuery.noConflict();
			var studentEnabled 	= 	$('input[id$=cdpEnableStudent]').is(':checked');
			var waEnabled       =   $('input[id$=cdpWAEnable]').is(':checked');
			//Disable WA Section
			if(studentEnabled){
				if(waEnabled){
					$('input[id$=cdpWAEnable]').prop('checked', false);
					$('input[id$=cdpWAEnable]').trigger("change");
				}
			} 
		
		}
		
		
		
		handleCDPWACheckAll = function(){
			$ = jQuery.noConflict();
			if($('[id$=cdpWAEnable]').is(':checked') ){
				//Disable Student section
				if($('input[id$=cdpEnableStudent]').is(':checked')){
					$('input[id$=cdpEnableStudent]').prop('checked', false);
					$('input[id$=cdpEnableStudent]').trigger("change");
				}
				
				$('input[id*=selectedintEmployment]').each(function (index, element) {
					$(element).prop('disabled', false);
					
				});
				$('input[id*=selectednonWorking]').each(function (index, element) {
					$(element).prop('disabled', false);
				});
			
			}else{
				$('input[id*=selectedintEmployment]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
					
				});
				$('input[id*=selectednonWorking]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
				});
		
			}
			
		}
		
		handleWorkingAdults = function(){
			$ = jQuery.noConflict();
			var chooseOneWA = $('select[id$=chooseoneWorkingAdults]').val();
			if(chooseOneWA == 'Employed in integrated employment and chooses to:'){
				$('input[id*=selectedintEmployment]').each(function (index, element) {
					$(element).prop('disabled', false);
					
				});
				$('input[id*=selectednonWorking]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
				});
			}else if(chooseOneWA == 'Currently not working in integrated employment and chooses to:'){
				$('input[id*=selectednonWorking]').each(function (index, element) {
					$(element).prop('disabled', false);
				});
				$('input[id*=selectedintEmployment]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
					
				});
			
			}else{
				$('input[id*=selectednonWorking]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
				});
				
				$('input[id*=selectedintEmployment]').each(function (index, element) {
					$(element).prop('checked', false);
					$(element).prop('disabled', true);
					
				});
			
			}
		
		
		
		}
		
		handleIntEmployment = function(){
			var now 	= $('select[id$=nowinIntEmployment]').val();
			var future  = $('select[id$=futureinIntEmployment]').val();
			
			if(now == 'No' || future == 'No'){
				 $('textarea[id$=whyPersonnoWork]').prop('disabled', false);
			}else if((now == 'Yes' && future == 'Yes') || (now == '' && future == '')){
				$('textarea[id$=whyPersonnoWork]').prop('disabled', true);
				$('textarea[id$=whyPersonnoWork]').val('');
			}
		
		}
		
		handleAckDescribe = function(){
			var reason = $('textarea[id$=ackDescribe]');
			var noFound = false;
			$('input[type="radio"]').filter('[data-name="ackno"]').each(function (index, element){
				if(element.checked){
					noFound = true;
					return false;
				}
			});
			
			if(noFound){
				reason.prop('disabled', false);
			}else{
				reason.prop('disabled', true);
				reason.val('');
			}
			
			return noFound;
		}
		
		//--------------------------------Related Party Start-----------------------------------------------------------------------------
		
		 function validateRelatedParty() {
		 	$ = jQuery.noConflict();
            var errors = '';
            $('#relatedPartyErrors').html(errors);
            if ($('input[id$=relatedPartyEntry_Name]').val() == '') {
                errors += '<li>Party Name is a required field.</li>';
            }
            if ($('select[id$=relatedPartyEntry_Status]').val() == '') {
                errors += '<li>Status is a required field.</li>';
            }
            var partyType = $('select[id$=relatedPartyEntry_Type]').val();
            if (partyType == '') {
                errors += '<li>Type is a required field.</li>';
            }
            var x = $('input[id$=relatedPartyEntry_Email]').val();
            if (x.length > 0) {
                var atpos = x.indexOf("@");
                var dotpos = x.lastIndexOf(".");
                if (atpos < 1 || dotpos < atpos + 2 || dotpos + 2 >= x.length) {
                    errors += '<li>Email is not a valid Email address</li>';
                }
            }
            var partyID = $('input[id$=relatedPartyEntry_Id]').val();
            str = "Physician - Primary";
            var obj = JSON.parse(relPartyData);

            var isPrimaryPhysician = false;
            for (var i = 0; i < obj.length; i++) {
                if (obj[i].TypeC === str) {
                    isPrimaryPhysician = true;
                    break;
                }
            }

            for (var i = 0; i < obj.length; i++) {
                if ((!partyID && isPrimaryPhysician && partyType === str) || // adding a new related party and one already exists thats primary physician .
                    (partyID === obj[i].Id && isPrimaryPhysician && obj[i].TypeC != str && partyType === str)) { // editing existing one and changing its type to primary physician but one already present.
                    errors += '<li>Only one "Physician - Primary" allowed. Please edit Type on this entry or change the Type assigned to existing Related Party.</li>';
                    break;
                }
            }
            $('#relatedPartyErrors').html(errors);
            return (errors == '');
        }
        
        
          //copies relatedParty fields from dialog for postback
        function relatedPartySave(isDialogClose) {
            if (validateRelatedParty()) {
                closeDialog('relatedPartyModal', 'span');
                var partyID 		= $('input[id$=relatedPartyEntry_Id]').val();
                var partyName 		= $('input[id$=relatedPartyEntry_Name]').val();
                var partyType 		= $('select[id$=relatedPartyEntry_Type]').val();
                var partyEmail 		= $('input[id$=relatedPartyEntry_Email]').val();
                var partyPhone1 	= $('input[id$=relatedPartyEntry_Phone]').val();
                var partyAddress 	= $('textarea[id$=relatedPartyEntry_Address]').val();
                var partyPhone2 	= $('input[id$=relatedPartyEntry_Phone_2]').val();
                var partyPhone1Type = $('select[id$=relatedPartyEntry_Phone_1_Type]').val();
                var partyPhone2Type = $('select[id$=relatedPartyEntry_Phone_2_Type]').val();
                var partyComments 	= $('textarea[id$=relatedPartyEntry_Comments]').val();
                var partyStatus		= $('select[id$=relatedPartyEntry_Status]').val();
                var pbsID 			= '{!Case_Management_Plan__c.Service_Assignment__r.Admission__r.Person_being_Served__c}';
                ORcombinedISPController.saveRelatedParty(partyID, partyName, partyType, partyPhone1, partyEmail,
                    partyAddress, partyPhone2, partyPhone1Type, partyPhone2Type, partyComments, partyStatus, pbsID,
                    function(result, event) {
                   		saveRelParty();
                       	if (!isDialogClose) {
                           	openDialog('relatedPartyModal', 'span', 'Add Related Party',800);
                       	}
                    	
                    }, {
                        escape: true
                    }
                );
            }
            return false;
        }
        
        
        function loadRelatedParty(partyId) {
        	$ = jQuery.noConflict();
            ORcombinedISPController.loadRelatedParty(partyId,
                function(result, event) {
                    if (event.status) {
                        $('input[id$=relatedPartyEntry_Id]').val(result.Id);
                        $('input[id$=relatedPartyEntry_Name]').val(result.Name);
                        $('select[id$=relatedPartyEntry_Type]').val(result.Type__c);
                        $('input[id$=relatedPartyEntry_Email]').val(result.Email__c);
                        $('input[id$=relatedPartyEntry_Phone]').val(result.Phone__c);
                        $('textarea[id$=relatedPartyEntry_Address]').val(result.Address__c);
                        $('input[id$=relatedPartyEntry_Phone_2]').val(result.Phone_2__c);
                        $('select[id$=relatedPartyEntry_Phone_1_Type]').val(result.Phone_1_Type__c);
                        $('select[id$=relatedPartyEntry_Phone_2_Type]').val(result.Phone_2_Type__c);
                        $('textarea[id$=relatedPartyEntry_Comments]').val(result.Comments__c);
                        $('select[id$=relatedPartyEntry_Status]').val(result.Status__c);

                        openDialog('relatedPartyModal', 'span', 'Add Related Party',800);
                    }
                }, {
                    escape: true
                }
            );
        }
        
        //--------------------------------Related Party End-----------------------------------------------------------------------------
        
        //--------------------Contributors and Signatures Start --------------------------------------------------------------------------
        
        function validateContributor(){
        	$ = jQuery.noConflict();
        	var errors = '';
            
        	var type  =  $('input[id$=contributorEntry_Type]').val();
        	var presentatMeeting   =  $('select[id$=contributorEntry_PresentatMeeting]').val();
        	
        	if(type  == 'TypeD'){
        		var	 name 				=  $('select[id$=contributorEntry_contributorName]').val();
	        	var	 contributiontoRisk =  $('input[id$=contributorEntry_Contributor]').is(':checked');
	        	var	 signRequired 		=  $('input[id$=contributorEntry_SignRequired]').is(':checked');
	        	
	        	if(name == ''){
	        		 errors += '<li>Contributor Name is mandatory</li>';
	        	}
	        	
        		if(contributiontoRisk == false && signRequired == false){
        			errors += '<li>Either Contribution to Risk or Signature Required for ISP? should be checked</li>';
        		}
        		
        		if(signRequired && presentatMeeting == ''){
        			errors += '<li>Present at ISP meeting? is mandatory</li>';
        		}
        		
        	}else{
        		if(presentatMeeting == ''){
        			errors += '<li>Present at ISP meeting? is mandatory</li>';
        		}
        	}
    
        	$('#contributorErrors').html(errors);
            return (errors == '');
        }
        
        function contributorSave(isDialogClose){
        	if(validateContributor()){
        		closeDialog('contributorModal', 'span');
        		var contributorId 		=  $('input[id$=contributorEntry_Id]').val();
        		var caseMgId 			= '{!Case_Management_Plan__c.Id}';
        		var type 				=  $('input[id$=contributorEntry_Type]').val();	
        		var presentatMeeting    =  $('select[id$=contributorEntry_PresentatMeeting]').val();
        		var contributiontoRisk  =  $('input[id$=contributorEntry_Contributor]').is(':checked');
        		
        		var name; 							
        		var signRequired ;
        
        		
        		if(type == 'TypeD'){
        			 name 				=  $('select[id$=contributorEntry_contributorName]').val();
	        		 //contributiontoRisk =  $('input[id$=contributorEntry_Contributor]').is(':checked');
	        		 signRequired 		=  $('input[id$=contributorEntry_SignRequired]').is(':checked');
        		}else{
        			 name 				=  $('input[id$=contributorEntry_contributorNameHidden]').val();
	        		 //contributiontoRisk =  false;
	        		 signRequired 		=  true;
        		}
        		
        		ORcombinedISPController.saveContributor(contributorId, name, contributiontoRisk, signRequired,
                    presentatMeeting, caseMgId,
                    function(result, event) {
                    	if(event.status){
                    		console.log('in here');
                    		saveContributor();
                        	if (!isDialogClose) {
                            	openDialog('contributorModal', 'span', 'Add Contributors and Signatures',800);
                            	//closeDialog('contributorModal', 'span');
                        	}
                    	}
                        else if (event.type === 'exception') {
                            document.getElementById("contributorErrors").innerHTML = event.message;
                        } else {
                            document.getElementById("contributorErrors").innerHTML = event.message;
                        }
                    }, {
                        escape: true
                    }
                );
       
        	}
        	return false;
        }

      
       /* function loadContributor(contributorId) {
            ORcombinedISPController.loadContributor(contributorId,
                function(result, event) {
                    if (event.status) {
                        $('input[id$=contributorEntry_Id]').val(result.Id);
                        $('select[id$=contributorEntry_contributorName]').val(result.ISP_Contributor_Name__c);
                        $('input[id$=contributorEntry_Title]').val(result.ISP_Title_Relationship_Person__c);
                        $('input[id$=contributorEntry_SignRequired]').prop('checked', result.ISP_Signature_Required__c);
                       	$('input[id$=contributorEntry_Contributor]').prop('checked', result.ISP_Contributor_Risk_Identification_Tool__c);
                        $('select[id$=contributorEntry_PresentatMeeting]').val(result.ISP_Present_at_Meeting__c);
                        
                        openDialog('contributorModal', 'span', 'Add Related Party',800);
                    }
                }, {
                    escape: true
                }
            );
        }*/
        
        //--------------------Contributors and Signatures End --------------------------------------------------------------------------------------------=-
        
        //--------------------------Error handling start--------------------------------------------------------------------------------------
        
        handleAllErrors = function(section, landingSection, isSection){
        	$ = jQuery.noConflict();
        	if(section == 'planDates'){
        		//handlePlanDateErrors();
        	}else if(section == 'pageProfile'){
        		handleOnepageProfileErrors();
        	}else if(section == 'cdp'){
        		handlecdpErrors();
        	}else if(section == 'risk'){
        		hanldeRiskErrors();
        	}else if(section == 'sppc'){
                handlesppcErrors();      
            }else if(section == 'acknowledgements'){
                handleackErrors(); 
            }else if(section == 'differences'){
            	handleDiffErrors();
            }else if(section == 'kpr'){
                handlekprErrors();
            }else if(section == 'legal'){
            	handleLegalErrors();
            }else if(section == 'ccms'){
                handleccmsErrors();
            }
            
            console.log('landingsection'+landingSection);
            console.log('isSection'+ isSection);
           
        	save(landingSection,isSection);
        	
        
        }
        
      /*  handlePlanDateErrors = function(){
        	var errors = '';
        	var start  = $('input[id$=startDate]').val();
        	var end    = $('input[id$=endDate]').val();
        	
        	if(start == ''){
        		errors += '<li>Start Date is mandatory</li>';
        	}
        	if(end == ''){
        		errors += '<li>End Date is mandatory</li>';
        	}
        	if(start > end){
        		errors += '<li>End Date must be greater then Start Date</li>';
        	}
        
        	if(errors != ''){
        		$('input[id$=pd_errors]').val(errors);
        		$('input[id$=pd_isValid]').val(false);
        	}else{
        		$('input[id$=pd_errors]').val('No Errors');
        		$('input[id$=pd_isValid]').val(true);
        	}
        }*/
        
        handleOnepageProfileErrors = function(){
        	var errors = '';
        	if($('select[id$=profile_onepage]').val() == ''){
        		errors += '<li>One page profile for is mandatory</li>';
        	}
        	if($('select[id$=profile_onepage]').val() == 'Other' && $('input[id$=profile_Other]').val() == ''){
        		errors += '<li>Specify Other field is mandatory when One page profile for is Other</li>';
        	}
        	if($('textarea[id$=profile_admire]').val() == ''){
        		errors += '<li>What people like and admire about is mandatory</li>';
        	}
        	if($('textarea[id$=profile_support]').val() == ''){
        		errors += '<li>How best to support is mandatory</li>';
        	}
        	if($('textarea[id$=profile_important]').val() == ''){
        		errors += '<li>What is important to is mandatory</li>';
        	}
        	
        	
        	if(errors != ''){
        		$('input[id$=profile_errors]').val(errors);
        		$('input[id$=profile_valid]').val(false);
        		
        	}else{
        		$('input[id$=profile_errors]').val('No Errors');
        		$('input[id$=profile_valid]').val(true);
        	}
        
        }
        
        handlecdpErrors = function(){
        	var errors 			= 	'';
        	var studentEnabled 	= 	$('input[id$=cdpEnableStudent]').is(':checked');
        	var waEnabled   	= 	$('input[id$=cdpWAEnable]').is(':checked');
        	var now 			= 	$('select[id$=nowinIntEmployment]').val();
			var future  		= 	$('select[id$=futureinIntEmployment]').val();
			var oppExp 			=   $('select[id$=expIntegratedEmp]').val();
			var share           =   $('textarea[id$=additionalInfoDecision]').val();
        	var changeMind      =   $('select[id$=perUnderstandExplore]').val();
        	
        	if($('select[id$=cdpEduLevel]').val() == ''){
        		errors += '<li>Education level completed is mandatory</li>';
        	}
        	
        	//Student Section
        	if(studentEnabled){
        		if($('input[id$=expectedExitDate]').val() == ''){
        			errors += '<li>Expected date of exit from school is mandatory</li>';
        		}
        		if($('input[id$=cdpCompleteDate]').val() == ''){
        			errors += '<li>Date by which CDP will be completed is mandatory</li>';
        		}
        		if($('select[id$=chooseOneStudent]').val() == ''){
        			errors += '<li>Choose one of the following statements for Students is mandatory</li>';
        		}
        		if($('select[id$=vrStatus]').val() == ''){
        			errors += '<li>Status with Vocational Rehabilitation (VR) (age 16 and up) is mandatory</li>';
        		}
        		if($('select[id$=vrStatus]').val() == 'Other/Not Applicable' && $('input[id$=vrStatusExplain]').val() == ''){
        			errors += '<li>Explain VR Status is mandatory</li>';
        		}
        	
        	}
        	
        	if(waEnabled){
        		var chooseOneWA = $('select[id$=chooseoneWorkingAdults]').val();
        		if( chooseOneWA == ''){
        			errors += '<li>Choose one of the following statements for Working Age Adults is mandatory</li>';
        		}
        		if(chooseOneWA == 'Employed in integrated employment and chooses to:'){
        			var atOne = false;
        			var decNotChecked = false;
        			$('input[id*=selectedintEmployment]').each(function (index, element) {
						if($(element).is(':checked')){
							atOne = true;
						}
						if($(element).val() == 'No longer continue in integrated employment at this time' && $(element).is(':checked')){
							decNotChecked = checkDecnotExploreEmployment();
							if(decNotChecked == false){
								errors += '<li>At least one reason should be checked in Decision not to explore employment when the person chooses to no longer continue in integrated employment at this time</li>';
							}
							
							if(now == ''){
								errors += '<li>Does the person want to work now in integrated employment? is mandatory</li>';
							}
							if(future == ''){
								errors += '<li>Does the person want to work in integrated employment in the future? is mandatory</li>';
							}
							if(oppExp == ''){
								errors += '<li>Has the person had an opportunity to experience integrated employment that meets his/her skills and interests? is mandatory</li>';
							}
							if(share == ''){
								errors += '<li>Share any additional information about this decision here is mandatory</li>';
							}
							if(changeMind == ''){
								errors += '<li> Does the person understand that he/she can change his/her mind at any time during the next twelve months and decide to pursue, explore, or obtain individual, integrated employment? is mandatory</li>';
							}
						}
					});
					
					if(atOne == false){
						errors += "<li>At least one option describing the person's employment choice should be checked when the person is employed in integrated employment</li>";
					}
					
        		}else if(chooseOneWA == 'Currently not working in integrated employment and chooses to:'){
        			var atOne = false;
        			var decNotChecked = false;
        			$('input[id*=selectednonWorking]').each(function (index, element) {
						if($(element).is(':checked')){
							atOne = true;
						}
						if($(element).val() == 'Not explore integrated employment at this time' && $(element).is(':checked')){
							decNotChecked = checkDecnotExploreEmployment();
							if(decNotChecked == false){
								errors += '<li>At least one reason should be checked in Decision not to explore employment when the person chooses not to explore integrated employment at this time</li>';
							}
							
							if(now == ''){
								errors += '<li>Does the person want to work now in integrated employment? is mandatory</li>';
							}
							if(future == ''){
								errors += '<li>Does the person want to work in integrated employment in the future? is mandatory</li>';
							}
							if(oppExp == ''){
								errors += '<li>Has the person had an opportunity to experience integrated employment that meets his/her skills and interests? is mandatory</li>';
							}
							if(share == ''){
								errors += '<li>Share any additional information about this decision here is mandatory</li>';
							}
							if(changeMind == ''){
								errors += '<li> Does the person understand that he/she can change his/her mind at any time during the next twelve months and decide to pursue, explore, or obtain individual, integrated employment? is mandatory</li>';
							}
							
						}
						
					});
					
					if(atOne == false){
						errors += "<li>At least one option describing the person's employment choice should be checked when the person is currently not working in integrated employment</li>";
					}
					
        		}
        		
        		/*if($('textarea[id$=barriersIntegrated]').val() == ''){
        			errors += '<li>Barriers to Working an Integrated Job is mandatory</li>'
        		}
        		if($('textarea[id$=barriersAddresses]').val() == ''){
        			errors += '<li>How will this obstacle be addressed?</li>'
        		}*/
        		if(validateOther('selectednotToExplore')){
        			errors += '<li>When Other is selected in Decision not to explore employment, Description is mandatory</li>'
        		}
        		if((now == 'No' || future == 'No') && $('textarea[id$=whyPersonnoWork]').val() == ''){
        			errors += '<li>If the answer was yes to #1 and/or #2, please explain why the person does not want work now and/or in the future is mandatory</li>'
        		}
        		if(oppExp == 'Yes' && $('textarea[id$=intempExperience]').val() == ''){
        			errors += '<li>If yes, please briefly describe his/her integrated employment experience is mandatory</li>'
        		}
        		if(oppExp == 'No' && $('textarea[id$=plantoRemedy]').val() == ''){
        			errors += '<li>If no, please describe why he/she has not had this opportunity and if there is a plan to remedy this situation is mandatory</li>'
        		}
        		
        		
        	
        	}
        	
        	if(studentEnabled == false && waEnabled == false){
        		errors += '<li>Either the Student or Working Age Adults section must be completed</li>';
        	}
        	
        	if(errors != ''){
        		$('input[id$=cdp_errors]').val(errors);
        		$('input[id$=cdp_isValid]').val(false);
        		
        	}else{
        		$('input[id$=cdp_errors]').val('No Errors');
        		$('input[id$=cdp_isValid]').val(true);
        	}
        
        }
        
        hanldeRiskErrors = function(){
        	var errors 			= 	'';
        	
        	if($('textarea[id$=risk_emergencyPrep]').val() == ''){
        		errors += '<li>Emergency preparedness (natural disasters, power outages, community disasters, etc.) is mandatory</li>';
        	}
        	if($('textarea[id$=risk_preventAbuse]').val() == ''){
        		errors += '<li>Preventing abuse (physical, emotional, financial, sexual, neglect) is mandatory</li>';
        	}
        	if($('textarea[id$=risk_whatHappens]').val() == ''){
        		errors += "<li>What happens if the person can't be reached? (timelines for notifying others, who to contact, etc.) is mandatory</li>";
        	}
        	if($('select[id$=risk_nursingPlan]').val() == ''){
        		errors += '<li>Does this person have a Nursing Care Plan? is mandatory</li>';
        	}
        	if($('select[id$=risk_nursingPlan]').val() == 'Yes' && ($('input[id$=risk_Home]').val() == '' && $('input[id$=risk_Home]').val() == '')){
        		errors += '<li>Indicate either a Home or Work location where the Nursing Care Plan may be found</li>';
        	}
        	if($('textarea[id$=risk_backupHome]').val() == '' && $('textarea[id$=risk_backupWork]').val() == ''){
        		errors += '<li>Either Home or Work/School/Day Supports is required in Back-up Plans, in the event that primary support is not available section.</li>';
        	}
        	
        	
        	if(errors != ''){
        		$('input[id$=risk_errors]').val(errors);
        		$('input[id$=risk_isvalid]').val(false);
        		
        	}else{
        		$('input[id$=risk_errors]').val('No Errors');
        		$('input[id$=risk_isvalid]').val(true);
        	}
        
        }
        
        
        handlesppcErrors = function(){
            var errors = ''; 

            var checkSNA 		=   $('input[id$=sppcSecNA]').is(':checked');
            var checkPlanYear 	= 	$('input[id$=sppcSameplan]').is(':checked');
            var sppcSt 			= 	$('input[id$=sppcStart]').val();
            var sppcEnd 		= 	$('input[id$=sppcEnd]').val();


            if(!checkSNA){
                if($('select[id$=sppcServiceElement]').val() == ''){
                    errors += '<li>Service Element is mandatory</li>';
                }
                if($('select[id$=sppcServiceCode]').val() == ''){
                    errors += '<li>Service Code is mandatory</li>';
                }
                if($('input[id$=sppcUnits]').val() == ''){
                    errors += '<li># Units is mandatory</li>';
                }
                if($('select[id$=sppcUnitType]').val() == ''){
                    errors += '<li>Unit Type is mandatory</li>';
                }
                if($('select[id$=sppcperFrequency]').val() == ''){
                    errors += '<li>Per (Frequency) is mandatory</li>';
                }
                if(!checkPlanYear){ 
                    if(sppcSt == '' && sppcEnd == ''){
                        errors += '<li>Either Same as Plan Year or Start and End is mandatory</li>';
                    }
                    else if(sppcSt == ''){
                        errors += '<li>Start is mandatory</li>';
                    } 
                    else if(sppcEnd == ''){
                        errors += '<li>End is mandatory</li>';
                    }
                }
                if($('textarea[id$=sppcChosenProvider]').val() == ''){
                    errors += '<li>Chosen provider type(s) & current rate(s) (PSW, independent contractor, provider organization, general business, etc.) is mandatory</li>';
                }
                if($('textarea[id$=sppcListNeeds]').val() == ''){
                    errors += '<li>List needs identified by the needs assessment that this service will address is mandatory</li>';
                }
                if($('textarea[id$=sppcPersonPref]').val() == ''){
                    errors += "<li>Person's preference on how this service is delivered is mandatory</li>";
                }
                
            }
                                            
            if(errors != ''){
	            $('input[id$=sppc_errors]').val(errors);
	            $('input[id$=sppc_isValid]').val(false);           
            }else{
	             $('input[id$=sppc_errors]').val('No Errors');
	             $('input[id$=sppc_isValid]').val(true);
            }
            
        }
        
        
        handleackErrors = function(){
            var errors         =  ''; 
            var checkSupport   =  $('input[id$=ackCheckSupport]').is(':checked');
            
           if(!checkSupport){
                if($('textarea[id$=ackRights]').val() == ''){
                    errors += '<li>Describe the supports the person needs to understand his/her rights or to understand this plan, if any is mandatory</li>';
                }
            }
            if (!$("input[name*='ackReflectServices']").is(':checked')) {
                errors += '<li>Does this ISP reflect the services the person chooses and the outcomes the person wants to work toward? is mandatory</li>' ;
            }
            if (!$("input[name*='ackPlanningProcess']").is(':checked')) {
                errors += '<li>Has the person been provided information about the planning process and how to request changes and updates to the ISP? is mandatory</li>' ;
            }
            if (!$("input[name*='ackmeetingLocation']").is(':checked')) {
                errors += '<li>Did the person choose the location of their ISP meeting? is mandatory</li>' ;
            }
            if (!$("input[name*='ackdevParticipation']").is(':checked')) {
                errors += '<li>Did the person choose who participated in their ISP development? is mandatory</li>' ;
            }
            if (!$("input[name*='ackscpaReview']").is(':checked')) {
                errors += '<li>Did the SC/PA review the services that are available to the person? is mandatory</li>' ;
            }
            if (!$("input[name*='ackDHSRights']").is(':checked')) {
                errors += '<li>Did the person receive notification of his/her DHS rights? is mandatory</li>' ;
            }
             if (!$("input[name*='ackfamneedFam']").is(':checked')) {
                errors += '<li>Does this ISP reflect what is needed for the family to effectively provide supports? is mandatory</li>' ;
            }
            //change id at 896
           	if (!$("input[name*='ackIndependence']").is(':checked')) {
                errors += "<li>Independence: Having control and choice over one's own life is mandatory</li>" ;
            }
            if (!$("input[name*='ackIntegration']").is(':checked')) {
                errors += '<li>Integration: Living near and using the same community resources and participating in the same activities as, and together with, people without disabilities is mandatory</li>' ;
            }
            //change id at 893
            if (!$("input[name*='ackProductivity']").is(':checked')) {
                errors += '<li>Productivity: Engaging in contributions to a household or community; or engaging in income-producing work that is measured through improvements in income level, employment status, or job advancement is mandatory</li>' ;
            }
            
            if(handleAckDescribe() && $('textarea[id$=ackDescribe]').val() == ''){
            	errors += '<li>Describe the reason for any question above remaining NO and the plan to address it is mandatory</li>' ;
            }
                                                          
            if(errors != ''){
		        $('input[id$=ack_errors]').val(errors);
		        $('input[id$=ack_isValid]').val(false);               
            }else{
                 $('input[id$=ack_errors]').val('No Errors');
                 $('input[id$=ack_isValid]').val(true);
            }
                
        }
        
        handleDiffErrors = function(){
        	 var errors         =  ''; 
        	
        	if($('textarea[id$=diff_planPerson]').val() == ''){
        		 errors += '<li>Note any differences between the contents of this plan and what the person wants is mandatory</li>' ;
        	}
        	if($('textarea[id$=diff_planOther]').val() == ''){
        		 errors += '<li>Note any differences between the contents of this plan and what any other ISP contributor wants is mandatory</li>' ;
        	}
        	if(errors != ''){
		        $('input[id$=differences_errors]').val(errors);
		        $('input[id$=differences_isValid]').val(false);               
            }else{
                 $('input[id$=differences_errors]').val('No Errors');
                 $('input[id$=differences_isValid]').val(true);
            }
                
        }
        
        handleLegalErrors = function(){
        	var errors         =  ''; 
        	var healthRep 	   =  $('select[id$=leg_healthrep]').val();
        	
        	if($('[id$=leg_guardian]').text() != '' && $('input[id$=leg_scope]').val() == ''){
        		errors += '<li>Scope of authority is required when Legal Representative/Guardian(s), if any is present</li>';
        	}
        	if(healthRep != '' && $('input[id$=leg_appdate]').val() == ''){
        		errors += '<li>Appointment Date is mandatory when Health care Representative is present</li>';
        	}
        	if(healthRep != '' && $('select[id$=leg_appType]').val() == ''){
        		errors += '<li>Type of Appointment is mandatory when Health care Representative is present</li>';
        	}
        	
        	if(errors != ''){
		        $('input[id$=leg_errors]').val(errors);
		        $('input[id$=leg_isvalid]').val(false);               
            }else{
                 $('input[id$=leg_errors]').val('No Errors');
                 $('input[id$=leg_isvalid]').val(true);
            }
        }
        
        handlekprErrors = function(){
             var errors         =  ''; 
             var checkKPR       =   $('input[id$=kprApplicable]').is(':checked');
             var checkPlanYear  =   $('input[id$=kprSameplan]').is(':checked');
             var kprSt          =   $('input[id$=kprStart]').val();
             var kprEnd         =   $('input[id$=kprEnd]').val();


              if(!checkKPR){
                if($('select[id$=kprServiceSetting]').val() == ''){
                    errors += '<li>Service Setting is mandatory</li>';
                }
                if($('input[id$=kprChosenProvider]').val() == ''){
                    errors += '<li>Chosen Provider is mandatory</li>';
                }
                 if(!checkPlanYear){ 
                     if(kprSt == '' && kprEnd == ''){
                         errors += '<li>Either Same as Plan Year or Start and End is mandatory</li>';
                     }
                     else if(kprSt == ''){
                         errors += '<li>Start is mandatory</li>';
                     } 
                     else if(kprEnd == ''){
                          errors += '<li>End is mandatory</li>';
                     }
                 }
                 
                 if (!$("input[name*='selectedKPRServices']").is(':checked')) {
                     errors += '<li>The K Plan services already included in residential services is mandatory</li>';
                 }
                 if (!$("input[name*='selectedKPRAdditional']").is(':checked')) {
                     errors += '<li>Additional K Plan services included in residential services is mandatory</li>';
                 }
                 if($('textarea[id$=kprListNeeds]').val() == ''){
                     errors += '<li>List identified needs that this service will address is mandatory</li>';
                 }
                 if($('textarea[id$=kprPersonPref]').val() == ''){
                     errors += "<li>Person's preference on how this service is delivered is mandatory</li>";
                 }
                 
              }
             
             if(errors != ''){
	                $('input[id$=kpr_errors]').val(errors);
	                $('input[id$=kpr_isValid]').val(false);               
            }else{
                 $('input[id$=kpr_errors]').val('No Errors');
                 $('input[id$=kpr_isValid]').val(true);
            }
                
        }
        
        
        handleccmsErrors = function(){
             var errors         =  ''; 
             var checkPlanYear  =  $('input[id$=ccmsSameplan]').is(':checked');
             var ccmsSt         =  $('input[id$=ccmStart]').val();
             var ccmsEnd        =  $('input[id$=ccmEnd]').val();


                
            if($('select[id$=ccmsType]').val() == ''){
                errors += '<li>Type is mandatory</li>' ;
            }
            if($('select[id$=ccmsChProv]').val() == ''){
            	errors += '<li>Chosen Provider is mandatory</li>' ;
            }
            if($('[id$=ccmsPrimeNum]').text() == ''){
            	errors += '<li>PRIME Number is required to finalize. Provide the PRIME Number on the Person Being Served record</li>' ;
             }
             if(!checkPlanYear){ 
                 if(ccmsSt == '' && ccmsEnd == ''){
                     errors += '<li>Either Same as Plan Year or Start and End is mandatory</li>';
                 }
                 else if(ccmsSt == ''){
                     errors += '<li>Start is mandatory</li>';
                 } 
                     else if(ccmsEnd == ''){
                         errors += '<li>End is mandatory</li>';
                     }
             }
            if($('select[id$=ccmsFreqMon]').val() == ''){
            	errors += '<li>Required frequency of case management monitoring is mandatory</li>' ;
            }
            if($('select[id$=ccmsFreqMon]').val() == 'Other case management monitoring' && $('input[id$=ccmfrequencyOther]').val() == ''){
            	errors += '<li>Specify is mandatory</li>' ;
             }
            if($('textarea[id$=ccmsDesc]').val() == ''){
               errors += '<li>Case management comments/descriptors of anticipated case management services during the year is mandatory</li>' ;
            }
            if($('textarea[id$=ccmsPersPref]').val() == ''){
               errors += "<li>Person's service delivery preference is mandatory</li>" ;
            }
            
           	if(errors != ''){
	             $('input[id$=ccms_errors]').val(errors);
	             $('input[id$=ccms_isValid]').val(false);               
            }else{
                 $('input[id$=ccms_errors]').val('No Errors');
                 $('input[id$=ccms_isValid]').val(true);
            }
                
        }
         
        
        checkDecnotExploreEmployment = function(){
        	var oneChecked = false;
        	$('input[id*=selectednotToExplore]').each(function (index, element) {
        		if($(element).is(':checked')){
					oneChecked = true;
				}
        	});
        	return oneChecked;
        }
        
        handleOther = function (ids) {
        	console.log('handle Other');
				var theval = false;
				$('input[id*=' + ids + ']').each(function (index, element) {
					if (element.value.indexOf('Other') == 0)
						theval = $(element).prop('checked');
				});

				if (theval == true) {
					// enable the text field called other
					$('input[id$=' + ids + 'other]').prop('disabled', false);
				} else {
					// disable the field and empty it out
					$('input[id$=' + ids + 'other]').prop('disabled', true);
					$('input[id$=' + ids + 'other]').prop('disabled', true).val('');
				}
			};
        
         validateOther = function (ids) {
				var theval = false;
				$('input[id*=' + ids + ']').each(function (index, element) {
					if (element.value.indexOf('Other') == 0)
						theval = $(element).prop('checked');
				});

				if (theval == true && $('input[id$=' + ids + 'other]').val() == '') {
					return true;
				}
				
				return false;
			}; 
			
			handleStartEnd = function(checkboxId, startId, endId){
				var check = $('input[id$=' +checkboxId+ ']').is(':checked');
				var start = $('input[id$=' +startId+ ']');
				var end   = $('input[id$=' +endId+ ']');
				
				if(check){
					$('input[id$=' +startId+ ']').prop('disabled', true).val('');
					$('input[id$=' +endId+ ']').prop('disabled', true).val('');
				}else{
					$('input[id$=' +startId+ ']').prop('disabled', false);
					$('input[id$=' +endId+ ']').prop('disabled', false);
				}
			
			
			}
        
           //--------------------------Error handling End--------------------------------------------------------------------------------------
        
        //opens the dialog
        function openDialog(dialogId, tagType, titleString, width) {
            console.log('trying to open modal');
            selector = tagType + '[id$=' + dialogId + ']';
            $(selector).dialog({
                dialogClass: 'fixed-dialog',
                title: titleString,
                modal: true,
                width: width,
                closeOnEscape: false
            }).parent().appendTo($('form[id$=FormId]'));
            $(selector).parent().find('a.ui-dialog-titlebar-close').remove();
        }

        function closeDialog(dialogId, tagType) {
            selector = tagType + '[id$=' + dialogId + ']';

            $(selector).dialog('destroy');
        }
	</script>
</apex:page>